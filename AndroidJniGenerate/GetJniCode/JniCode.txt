JNIEXPORT void JNICALL Java_org_chromium_base_AnimationFrameTimeHistogram_nativeSaveHistogram(JNIEnv* arg0, jobject arg1, jstring arg2, jlongArray arg3, jint arg4){
	Origin_Java_org_chromium_base_AnimationFrameTimeHistogram_nativeSaveHistogram* TargetFunc = 
		(Origin_Java_org_chromium_base_AnimationFrameTimeHistogram_nativeSaveHistogram*)dlsym(Sohandle, "Java_org_chromium_base_AnimationFrameTimeHistogram_nativeSaveHistogram");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_base_ApplicationStatus_nativeOnApplicationStateChange(JNIEnv* arg0, jobject arg1, jint arg2){
	Origin_Java_org_chromium_base_ApplicationStatus_nativeOnApplicationStateChange* TargetFunc = 
		(Origin_Java_org_chromium_base_ApplicationStatus_nativeOnApplicationStateChange*)dlsym(Sohandle, "Java_org_chromium_base_ApplicationStatus_nativeOnApplicationStateChange");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_base_CommandLine_nativeAppendSwitch(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_chromium_base_CommandLine_nativeAppendSwitch* TargetFunc = 
		(Origin_Java_org_chromium_base_CommandLine_nativeAppendSwitch*)dlsym(Sohandle, "Java_org_chromium_base_CommandLine_nativeAppendSwitch");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_base_CommandLine_nativeAppendSwitchesAndArguments(JNIEnv* arg0, jobject arg1, jobjectArray arg2){
	Origin_Java_org_chromium_base_CommandLine_nativeAppendSwitchesAndArguments* TargetFunc = 
		(Origin_Java_org_chromium_base_CommandLine_nativeAppendSwitchesAndArguments*)dlsym(Sohandle, "Java_org_chromium_base_CommandLine_nativeAppendSwitchesAndArguments");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_base_CommandLine_nativeAppendSwitchWithValue(JNIEnv* arg0, jobject arg1, jstring arg2, jstring arg3){
	Origin_Java_org_chromium_base_CommandLine_nativeAppendSwitchWithValue* TargetFunc = 
		(Origin_Java_org_chromium_base_CommandLine_nativeAppendSwitchWithValue*)dlsym(Sohandle, "Java_org_chromium_base_CommandLine_nativeAppendSwitchWithValue");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jstring JNICALL Java_org_chromium_base_CommandLine_nativeGetSwitchValue(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_chromium_base_CommandLine_nativeGetSwitchValue* TargetFunc = 
		(Origin_Java_org_chromium_base_CommandLine_nativeGetSwitchValue*)dlsym(Sohandle, "Java_org_chromium_base_CommandLine_nativeGetSwitchValue");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_base_CommandLine_nativeHasSwitch(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_chromium_base_CommandLine_nativeHasSwitch* TargetFunc = 
		(Origin_Java_org_chromium_base_CommandLine_nativeHasSwitch*)dlsym(Sohandle, "Java_org_chromium_base_CommandLine_nativeHasSwitch");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_base_CommandLine_nativeInit(JNIEnv* arg0, jobject arg1, jobjectArray arg2){
	Origin_Java_org_chromium_base_CommandLine_nativeInit* TargetFunc = 
		(Origin_Java_org_chromium_base_CommandLine_nativeInit*)dlsym(Sohandle, "Java_org_chromium_base_CommandLine_nativeInit");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jint JNICALL Java_org_chromium_base_CpuFeatures_nativeGetCoreCount(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_base_CpuFeatures_nativeGetCoreCount* TargetFunc = 
		(Origin_Java_org_chromium_base_CpuFeatures_nativeGetCoreCount*)dlsym(Sohandle, "Java_org_chromium_base_CpuFeatures_nativeGetCoreCount");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT jlong JNICALL Java_org_chromium_base_CpuFeatures_nativeGetCpuFeatures(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_base_CpuFeatures_nativeGetCpuFeatures* TargetFunc = 
		(Origin_Java_org_chromium_base_CpuFeatures_nativeGetCpuFeatures*)dlsym(Sohandle, "Java_org_chromium_base_CpuFeatures_nativeGetCpuFeatures");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_chromium_base_EarlyTraceEvent_nativeRecordEarlyEvent(JNIEnv* arg0, jobject arg1, jstring arg2, jlong arg3, jlong arg4, jint arg5, jlong arg6){
	Origin_Java_org_chromium_base_EarlyTraceEvent_nativeRecordEarlyEvent* TargetFunc = 
		(Origin_Java_org_chromium_base_EarlyTraceEvent_nativeRecordEarlyEvent*)dlsym(Sohandle, "Java_org_chromium_base_EarlyTraceEvent_nativeRecordEarlyEvent");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
}
JNIEXPORT void JNICALL Java_org_chromium_base_EarlyTraceEvent_nativeRecordEarlyFinishAsyncEvent(JNIEnv* arg0, jobject arg1, jstring arg2, jlong arg3, jlong arg4){
	Origin_Java_org_chromium_base_EarlyTraceEvent_nativeRecordEarlyFinishAsyncEvent* TargetFunc = 
		(Origin_Java_org_chromium_base_EarlyTraceEvent_nativeRecordEarlyFinishAsyncEvent*)dlsym(Sohandle, "Java_org_chromium_base_EarlyTraceEvent_nativeRecordEarlyFinishAsyncEvent");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_base_EarlyTraceEvent_nativeRecordEarlyStartAsyncEvent(JNIEnv* arg0, jobject arg1, jstring arg2, jlong arg3, jlong arg4){
	Origin_Java_org_chromium_base_EarlyTraceEvent_nativeRecordEarlyStartAsyncEvent* TargetFunc = 
		(Origin_Java_org_chromium_base_EarlyTraceEvent_nativeRecordEarlyStartAsyncEvent*)dlsym(Sohandle, "Java_org_chromium_base_EarlyTraceEvent_nativeRecordEarlyStartAsyncEvent");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT jstring JNICALL Java_org_chromium_base_FieldTrialList_nativeFindFullName(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_chromium_base_FieldTrialList_nativeFindFullName* TargetFunc = 
		(Origin_Java_org_chromium_base_FieldTrialList_nativeFindFullName*)dlsym(Sohandle, "Java_org_chromium_base_FieldTrialList_nativeFindFullName");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jstring JNICALL Java_org_chromium_base_FieldTrialList_nativeGetVariationParameter(JNIEnv* arg0, jobject arg1, jstring arg2, jstring arg3){
	Origin_Java_org_chromium_base_FieldTrialList_nativeGetVariationParameter* TargetFunc = 
		(Origin_Java_org_chromium_base_FieldTrialList_nativeGetVariationParameter*)dlsym(Sohandle, "Java_org_chromium_base_FieldTrialList_nativeGetVariationParameter");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_base_FieldTrialList_nativeTrialExists(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_chromium_base_FieldTrialList_nativeTrialExists* TargetFunc = 
		(Origin_Java_org_chromium_base_FieldTrialList_nativeTrialExists*)dlsym(Sohandle, "Java_org_chromium_base_FieldTrialList_nativeTrialExists");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_base_ImportantFileWriterAndroid_nativeWriteFileAtomically(JNIEnv* arg0, jobject arg1, jstring arg2, jbyteArray arg3){
	Origin_Java_org_chromium_base_ImportantFileWriterAndroid_nativeWriteFileAtomically* TargetFunc = 
		(Origin_Java_org_chromium_base_ImportantFileWriterAndroid_nativeWriteFileAtomically*)dlsym(Sohandle, "Java_org_chromium_base_ImportantFileWriterAndroid_nativeWriteFileAtomically");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_base_JavaExceptionReporter_nativeReportJavaException(JNIEnv* arg0, jobject arg1, jboolean arg2, jthrowable arg3){
	Origin_Java_org_chromium_base_JavaExceptionReporter_nativeReportJavaException* TargetFunc = 
		(Origin_Java_org_chromium_base_JavaExceptionReporter_nativeReportJavaException*)dlsym(Sohandle, "Java_org_chromium_base_JavaExceptionReporter_nativeReportJavaException");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_base_JavaExceptionReporter_nativeReportJavaStackTrace(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_chromium_base_JavaExceptionReporter_nativeReportJavaStackTrace* TargetFunc = 
		(Origin_Java_org_chromium_base_JavaExceptionReporter_nativeReportJavaStackTrace*)dlsym(Sohandle, "Java_org_chromium_base_JavaExceptionReporter_nativeReportJavaStackTrace");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_base_JavaHandlerThread_nativeInitializeThread(JNIEnv* arg0, jobject arg1, jlong arg2, jlong arg3){
	Origin_Java_org_chromium_base_JavaHandlerThread_nativeInitializeThread* TargetFunc = 
		(Origin_Java_org_chromium_base_JavaHandlerThread_nativeInitializeThread*)dlsym(Sohandle, "Java_org_chromium_base_JavaHandlerThread_nativeInitializeThread");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_base_JavaHandlerThread_nativeOnLooperStopped(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_base_JavaHandlerThread_nativeOnLooperStopped* TargetFunc = 
		(Origin_Java_org_chromium_base_JavaHandlerThread_nativeOnLooperStopped*)dlsym(Sohandle, "Java_org_chromium_base_JavaHandlerThread_nativeOnLooperStopped");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_base_JavaHandlerThread_nativeStopThread(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_base_JavaHandlerThread_nativeStopThread* TargetFunc = 
		(Origin_Java_org_chromium_base_JavaHandlerThread_nativeStopThread*)dlsym(Sohandle, "Java_org_chromium_base_JavaHandlerThread_nativeStopThread");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_base_library_1loader_LibraryLoader_nativeForkAndPrefetchNativeLibrary(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_base_library_1loader_LibraryLoader_nativeForkAndPrefetchNativeLibrary* TargetFunc = 
		(Origin_Java_org_chromium_base_library_1loader_LibraryLoader_nativeForkAndPrefetchNativeLibrary*)dlsym(Sohandle, "Java_org_chromium_base_library_1loader_LibraryLoader_nativeForkAndPrefetchNativeLibrary");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT jstring JNICALL Java_org_chromium_base_library_1loader_LibraryLoader_nativeGetVersionNumber(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_base_library_1loader_LibraryLoader_nativeGetVersionNumber* TargetFunc = 
		(Origin_Java_org_chromium_base_library_1loader_LibraryLoader_nativeGetVersionNumber*)dlsym(Sohandle, "Java_org_chromium_base_library_1loader_LibraryLoader_nativeGetVersionNumber");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_base_library_1loader_LibraryLoader_nativeLibraryLoaded(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_base_library_1loader_LibraryLoader_nativeLibraryLoaded* TargetFunc = 
		(Origin_Java_org_chromium_base_library_1loader_LibraryLoader_nativeLibraryLoaded*)dlsym(Sohandle, "Java_org_chromium_base_library_1loader_LibraryLoader_nativeLibraryLoaded");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT jint JNICALL Java_org_chromium_base_library_1loader_LibraryLoader_nativePercentageOfResidentNativeLibraryCode(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_base_library_1loader_LibraryLoader_nativePercentageOfResidentNativeLibraryCode* TargetFunc = 
		(Origin_Java_org_chromium_base_library_1loader_LibraryLoader_nativePercentageOfResidentNativeLibraryCode*)dlsym(Sohandle, "Java_org_chromium_base_library_1loader_LibraryLoader_nativePercentageOfResidentNativeLibraryCode");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_chromium_base_library_1loader_LibraryLoader_nativePeriodicallyCollectResidency(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_base_library_1loader_LibraryLoader_nativePeriodicallyCollectResidency* TargetFunc = 
		(Origin_Java_org_chromium_base_library_1loader_LibraryLoader_nativePeriodicallyCollectResidency*)dlsym(Sohandle, "Java_org_chromium_base_library_1loader_LibraryLoader_nativePeriodicallyCollectResidency");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_chromium_base_library_1loader_LibraryLoader_nativeRecordChromiumAndroidLinkerBrowserHistogram(JNIEnv* arg0, jobject arg1, jboolean arg2, jboolean arg3, jint arg4, jlong arg5){
	Origin_Java_org_chromium_base_library_1loader_LibraryLoader_nativeRecordChromiumAndroidLinkerBrowserHistogram* TargetFunc = 
		(Origin_Java_org_chromium_base_library_1loader_LibraryLoader_nativeRecordChromiumAndroidLinkerBrowserHistogram*)dlsym(Sohandle, "Java_org_chromium_base_library_1loader_LibraryLoader_nativeRecordChromiumAndroidLinkerBrowserHistogram");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT void JNICALL Java_org_chromium_base_library_1loader_LibraryLoader_nativeRecordLibraryPreloaderBrowserHistogram(JNIEnv* arg0, jobject arg1, jint arg2){
	Origin_Java_org_chromium_base_library_1loader_LibraryLoader_nativeRecordLibraryPreloaderBrowserHistogram* TargetFunc = 
		(Origin_Java_org_chromium_base_library_1loader_LibraryLoader_nativeRecordLibraryPreloaderBrowserHistogram*)dlsym(Sohandle, "Java_org_chromium_base_library_1loader_LibraryLoader_nativeRecordLibraryPreloaderBrowserHistogram");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_base_library_1loader_LibraryLoader_nativeRegisterChromiumAndroidLinkerRendererHistogram(JNIEnv* arg0, jobject arg1, jboolean arg2, jboolean arg3, jlong arg4){
	Origin_Java_org_chromium_base_library_1loader_LibraryLoader_nativeRegisterChromiumAndroidLinkerRendererHistogram* TargetFunc = 
		(Origin_Java_org_chromium_base_library_1loader_LibraryLoader_nativeRegisterChromiumAndroidLinkerRendererHistogram*)dlsym(Sohandle, "Java_org_chromium_base_library_1loader_LibraryLoader_nativeRegisterChromiumAndroidLinkerRendererHistogram");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_base_library_1loader_LibraryLoader_nativeRegisterLibraryPreloaderRendererHistogram(JNIEnv* arg0, jobject arg1, jint arg2){
	Origin_Java_org_chromium_base_library_1loader_LibraryLoader_nativeRegisterLibraryPreloaderRendererHistogram* TargetFunc = 
		(Origin_Java_org_chromium_base_library_1loader_LibraryLoader_nativeRegisterLibraryPreloaderRendererHistogram*)dlsym(Sohandle, "Java_org_chromium_base_library_1loader_LibraryLoader_nativeRegisterLibraryPreloaderRendererHistogram");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_base_MemoryPressureListener_nativeOnMemoryPressure(JNIEnv* arg0, jobject arg1, jint arg2){
	Origin_Java_org_chromium_base_MemoryPressureListener_nativeOnMemoryPressure* TargetFunc = 
		(Origin_Java_org_chromium_base_MemoryPressureListener_nativeOnMemoryPressure*)dlsym(Sohandle, "Java_org_chromium_base_MemoryPressureListener_nativeOnMemoryPressure");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jint JNICALL Java_org_chromium_base_metrics_RecordHistogram_nativeGetHistogramTotalCountForTesting(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_chromium_base_metrics_RecordHistogram_nativeGetHistogramTotalCountForTesting* TargetFunc = 
		(Origin_Java_org_chromium_base_metrics_RecordHistogram_nativeGetHistogramTotalCountForTesting*)dlsym(Sohandle, "Java_org_chromium_base_metrics_RecordHistogram_nativeGetHistogramTotalCountForTesting");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jint JNICALL Java_org_chromium_base_metrics_RecordHistogram_nativeGetHistogramValueCountForTesting(JNIEnv* arg0, jobject arg1, jstring arg2, jint arg3){
	Origin_Java_org_chromium_base_metrics_RecordHistogram_nativeGetHistogramValueCountForTesting* TargetFunc = 
		(Origin_Java_org_chromium_base_metrics_RecordHistogram_nativeGetHistogramValueCountForTesting*)dlsym(Sohandle, "Java_org_chromium_base_metrics_RecordHistogram_nativeGetHistogramValueCountForTesting");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jlong JNICALL Java_org_chromium_base_metrics_RecordHistogram_nativeRecordBooleanHistogram(JNIEnv* arg0, jobject arg1, jstring arg2, jlong arg3, jboolean arg4){
	Origin_Java_org_chromium_base_metrics_RecordHistogram_nativeRecordBooleanHistogram* TargetFunc = 
		(Origin_Java_org_chromium_base_metrics_RecordHistogram_nativeRecordBooleanHistogram*)dlsym(Sohandle, "Java_org_chromium_base_metrics_RecordHistogram_nativeRecordBooleanHistogram");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT jlong JNICALL Java_org_chromium_base_metrics_RecordHistogram_nativeRecordCustomCountHistogram(JNIEnv* arg0, jobject arg1, jstring arg2, jlong arg3, jint arg4, jint arg5, jint arg6, jint arg7){
	Origin_Java_org_chromium_base_metrics_RecordHistogram_nativeRecordCustomCountHistogram* TargetFunc = 
		(Origin_Java_org_chromium_base_metrics_RecordHistogram_nativeRecordCustomCountHistogram*)dlsym(Sohandle, "Java_org_chromium_base_metrics_RecordHistogram_nativeRecordCustomCountHistogram");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
}
JNIEXPORT jlong JNICALL Java_org_chromium_base_metrics_RecordHistogram_nativeRecordCustomTimesHistogramMilliseconds(JNIEnv* arg0, jobject arg1, jstring arg2, jlong arg3, jint arg4, jint arg5, jint arg6, jint arg7){
	Origin_Java_org_chromium_base_metrics_RecordHistogram_nativeRecordCustomTimesHistogramMilliseconds* TargetFunc = 
		(Origin_Java_org_chromium_base_metrics_RecordHistogram_nativeRecordCustomTimesHistogramMilliseconds*)dlsym(Sohandle, "Java_org_chromium_base_metrics_RecordHistogram_nativeRecordCustomTimesHistogramMilliseconds");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
}
JNIEXPORT jlong JNICALL Java_org_chromium_base_metrics_RecordHistogram_nativeRecordEnumeratedHistogram(JNIEnv* arg0, jobject arg1, jstring arg2, jlong arg3, jint arg4, jint arg5){
	Origin_Java_org_chromium_base_metrics_RecordHistogram_nativeRecordEnumeratedHistogram* TargetFunc = 
		(Origin_Java_org_chromium_base_metrics_RecordHistogram_nativeRecordEnumeratedHistogram*)dlsym(Sohandle, "Java_org_chromium_base_metrics_RecordHistogram_nativeRecordEnumeratedHistogram");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT jlong JNICALL Java_org_chromium_base_metrics_RecordHistogram_nativeRecordLinearCountHistogram(JNIEnv* arg0, jobject arg1, jstring arg2, jlong arg3, jint arg4, jint arg5, jint arg6, jint arg7){
	Origin_Java_org_chromium_base_metrics_RecordHistogram_nativeRecordLinearCountHistogram* TargetFunc = 
		(Origin_Java_org_chromium_base_metrics_RecordHistogram_nativeRecordLinearCountHistogram*)dlsym(Sohandle, "Java_org_chromium_base_metrics_RecordHistogram_nativeRecordLinearCountHistogram");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
}
JNIEXPORT jlong JNICALL Java_org_chromium_base_metrics_RecordHistogram_nativeRecordSparseHistogram(JNIEnv* arg0, jobject arg1, jstring arg2, jlong arg3, jint arg4){
	Origin_Java_org_chromium_base_metrics_RecordHistogram_nativeRecordSparseHistogram* TargetFunc = 
		(Origin_Java_org_chromium_base_metrics_RecordHistogram_nativeRecordSparseHistogram*)dlsym(Sohandle, "Java_org_chromium_base_metrics_RecordHistogram_nativeRecordSparseHistogram");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT jlong JNICALL Java_org_chromium_base_metrics_RecordUserAction_nativeAddActionCallbackForTesting(JNIEnv* arg0, jobject arg1, jobject arg2){
	Origin_Java_org_chromium_base_metrics_RecordUserAction_nativeAddActionCallbackForTesting* TargetFunc = 
		(Origin_Java_org_chromium_base_metrics_RecordUserAction_nativeAddActionCallbackForTesting*)dlsym(Sohandle, "Java_org_chromium_base_metrics_RecordUserAction_nativeAddActionCallbackForTesting");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_base_metrics_RecordUserAction_nativeRecordUserAction(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_chromium_base_metrics_RecordUserAction_nativeRecordUserAction* TargetFunc = 
		(Origin_Java_org_chromium_base_metrics_RecordUserAction_nativeRecordUserAction*)dlsym(Sohandle, "Java_org_chromium_base_metrics_RecordUserAction_nativeRecordUserAction");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_base_metrics_RecordUserAction_nativeRemoveActionCallbackForTesting(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_base_metrics_RecordUserAction_nativeRemoveActionCallbackForTesting* TargetFunc = 
		(Origin_Java_org_chromium_base_metrics_RecordUserAction_nativeRemoveActionCallbackForTesting*)dlsym(Sohandle, "Java_org_chromium_base_metrics_RecordUserAction_nativeRemoveActionCallbackForTesting");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jstring JNICALL Java_org_chromium_base_metrics_StatisticsRecorderAndroid_nativeToJson(JNIEnv* arg0, jobject arg1, jint arg2){
	Origin_Java_org_chromium_base_metrics_StatisticsRecorderAndroid_nativeToJson* TargetFunc = 
		(Origin_Java_org_chromium_base_metrics_StatisticsRecorderAndroid_nativeToJson*)dlsym(Sohandle, "Java_org_chromium_base_metrics_StatisticsRecorderAndroid_nativeToJson");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_base_PathService_nativeOverride(JNIEnv* arg0, jobject arg1, jint arg2, jstring arg3){
	Origin_Java_org_chromium_base_PathService_nativeOverride* TargetFunc = 
		(Origin_Java_org_chromium_base_PathService_nativeOverride*)dlsym(Sohandle, "Java_org_chromium_base_PathService_nativeOverride");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_base_PowerMonitor_nativeOnBatteryChargingChanged(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_base_PowerMonitor_nativeOnBatteryChargingChanged* TargetFunc = 
		(Origin_Java_org_chromium_base_PowerMonitor_nativeOnBatteryChargingChanged*)dlsym(Sohandle, "Java_org_chromium_base_PowerMonitor_nativeOnBatteryChargingChanged");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_chromium_base_process_1launcher_ChildProcessService_nativeExitChildProcess(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_base_process_1launcher_ChildProcessService_nativeExitChildProcess* TargetFunc = 
		(Origin_Java_org_chromium_base_process_1launcher_ChildProcessService_nativeExitChildProcess*)dlsym(Sohandle, "Java_org_chromium_base_process_1launcher_ChildProcessService_nativeExitChildProcess");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_chromium_base_process_1launcher_ChildProcessService_nativeRegisterFileDescriptors(JNIEnv* arg0, jobject arg1, jobjectArray arg2, jintArray arg3, jintArray arg4, jlongArray arg5, jlongArray arg6){
	Origin_Java_org_chromium_base_process_1launcher_ChildProcessService_nativeRegisterFileDescriptors* TargetFunc = 
		(Origin_Java_org_chromium_base_process_1launcher_ChildProcessService_nativeRegisterFileDescriptors*)dlsym(Sohandle, "Java_org_chromium_base_process_1launcher_ChildProcessService_nativeRegisterFileDescriptors");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
}
JNIEXPORT void JNICALL Java_org_chromium_base_SystemMessageHandler_nativeDoIdleWork(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_base_SystemMessageHandler_nativeDoIdleWork* TargetFunc = 
		(Origin_Java_org_chromium_base_SystemMessageHandler_nativeDoIdleWork*)dlsym(Sohandle, "Java_org_chromium_base_SystemMessageHandler_nativeDoIdleWork");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_base_SystemMessageHandler_nativeDoRunLoopOnce(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_chromium_base_SystemMessageHandler_nativeDoRunLoopOnce* TargetFunc = 
		(Origin_Java_org_chromium_base_SystemMessageHandler_nativeDoRunLoopOnce*)dlsym(Sohandle, "Java_org_chromium_base_SystemMessageHandler_nativeDoRunLoopOnce");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_base_SysUtils_nativeLogPageFaultCountToTracing(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_base_SysUtils_nativeLogPageFaultCountToTracing* TargetFunc = 
		(Origin_Java_org_chromium_base_SysUtils_nativeLogPageFaultCountToTracing*)dlsym(Sohandle, "Java_org_chromium_base_SysUtils_nativeLogPageFaultCountToTracing");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT jlong JNICALL Java_org_chromium_base_TimeUtils_nativeGetTimeTicksNowUs(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_base_TimeUtils_nativeGetTimeTicksNowUs* TargetFunc = 
		(Origin_Java_org_chromium_base_TimeUtils_nativeGetTimeTicksNowUs*)dlsym(Sohandle, "Java_org_chromium_base_TimeUtils_nativeGetTimeTicksNowUs");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_chromium_base_TraceEvent_nativeBegin(JNIEnv* arg0, jobject arg1, jstring arg2, jstring arg3){
	Origin_Java_org_chromium_base_TraceEvent_nativeBegin* TargetFunc = 
		(Origin_Java_org_chromium_base_TraceEvent_nativeBegin*)dlsym(Sohandle, "Java_org_chromium_base_TraceEvent_nativeBegin");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_base_TraceEvent_nativeBeginToplevel(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_chromium_base_TraceEvent_nativeBeginToplevel* TargetFunc = 
		(Origin_Java_org_chromium_base_TraceEvent_nativeBeginToplevel*)dlsym(Sohandle, "Java_org_chromium_base_TraceEvent_nativeBeginToplevel");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_base_TraceEvent_nativeEnd(JNIEnv* arg0, jobject arg1, jstring arg2, jstring arg3){
	Origin_Java_org_chromium_base_TraceEvent_nativeEnd* TargetFunc = 
		(Origin_Java_org_chromium_base_TraceEvent_nativeEnd*)dlsym(Sohandle, "Java_org_chromium_base_TraceEvent_nativeEnd");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_base_TraceEvent_nativeEndToplevel(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_base_TraceEvent_nativeEndToplevel* TargetFunc = 
		(Origin_Java_org_chromium_base_TraceEvent_nativeEndToplevel*)dlsym(Sohandle, "Java_org_chromium_base_TraceEvent_nativeEndToplevel");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_chromium_base_TraceEvent_nativeFinishAsync(JNIEnv* arg0, jobject arg1, jstring arg2, jlong arg3){
	Origin_Java_org_chromium_base_TraceEvent_nativeFinishAsync* TargetFunc = 
		(Origin_Java_org_chromium_base_TraceEvent_nativeFinishAsync*)dlsym(Sohandle, "Java_org_chromium_base_TraceEvent_nativeFinishAsync");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_base_TraceEvent_nativeInstant(JNIEnv* arg0, jobject arg1, jstring arg2, jstring arg3){
	Origin_Java_org_chromium_base_TraceEvent_nativeInstant* TargetFunc = 
		(Origin_Java_org_chromium_base_TraceEvent_nativeInstant*)dlsym(Sohandle, "Java_org_chromium_base_TraceEvent_nativeInstant");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_base_TraceEvent_nativeRegisterEnabledObserver(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_base_TraceEvent_nativeRegisterEnabledObserver* TargetFunc = 
		(Origin_Java_org_chromium_base_TraceEvent_nativeRegisterEnabledObserver*)dlsym(Sohandle, "Java_org_chromium_base_TraceEvent_nativeRegisterEnabledObserver");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_chromium_base_TraceEvent_nativeStartAsync(JNIEnv* arg0, jobject arg1, jstring arg2, jlong arg3){
	Origin_Java_org_chromium_base_TraceEvent_nativeStartAsync* TargetFunc = 
		(Origin_Java_org_chromium_base_TraceEvent_nativeStartAsync*)dlsym(Sohandle, "Java_org_chromium_base_TraceEvent_nativeStartAsync");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_base_TraceEvent_nativeStartATrace(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_base_TraceEvent_nativeStartATrace* TargetFunc = 
		(Origin_Java_org_chromium_base_TraceEvent_nativeStartATrace*)dlsym(Sohandle, "Java_org_chromium_base_TraceEvent_nativeStartATrace");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_chromium_base_TraceEvent_nativeStopATrace(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_base_TraceEvent_nativeStopATrace* TargetFunc = 
		(Origin_Java_org_chromium_base_TraceEvent_nativeStopATrace*)dlsym(Sohandle, "Java_org_chromium_base_TraceEvent_nativeStopATrace");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT jstring JNICALL Java_org_chromium_components_url_1formatter_UrlFormatter_nativeFixupUrl(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_chromium_components_url_1formatter_UrlFormatter_nativeFixupUrl* TargetFunc = 
		(Origin_Java_org_chromium_components_url_1formatter_UrlFormatter_nativeFixupUrl*)dlsym(Sohandle, "Java_org_chromium_components_url_1formatter_UrlFormatter_nativeFixupUrl");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jstring JNICALL Java_org_chromium_components_url_1formatter_UrlFormatter_nativeFormatUrlForDisplay(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_chromium_components_url_1formatter_UrlFormatter_nativeFormatUrlForDisplay* TargetFunc = 
		(Origin_Java_org_chromium_components_url_1formatter_UrlFormatter_nativeFormatUrlForDisplay*)dlsym(Sohandle, "Java_org_chromium_components_url_1formatter_UrlFormatter_nativeFormatUrlForDisplay");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jstring JNICALL Java_org_chromium_components_url_1formatter_UrlFormatter_nativeFormatUrlForDisplayOmitScheme(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_chromium_components_url_1formatter_UrlFormatter_nativeFormatUrlForDisplayOmitScheme* TargetFunc = 
		(Origin_Java_org_chromium_components_url_1formatter_UrlFormatter_nativeFormatUrlForDisplayOmitScheme*)dlsym(Sohandle, "Java_org_chromium_components_url_1formatter_UrlFormatter_nativeFormatUrlForDisplayOmitScheme");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jstring JNICALL Java_org_chromium_components_url_1formatter_UrlFormatter_nativeFormatUrlForSecurityDisplay(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_chromium_components_url_1formatter_UrlFormatter_nativeFormatUrlForSecurityDisplay* TargetFunc = 
		(Origin_Java_org_chromium_components_url_1formatter_UrlFormatter_nativeFormatUrlForSecurityDisplay*)dlsym(Sohandle, "Java_org_chromium_components_url_1formatter_UrlFormatter_nativeFormatUrlForSecurityDisplay");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jstring JNICALL Java_org_chromium_components_url_1formatter_UrlFormatter_nativeFormatUrlForSecurityDisplayOmitScheme(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_chromium_components_url_1formatter_UrlFormatter_nativeFormatUrlForSecurityDisplayOmitScheme* TargetFunc = 
		(Origin_Java_org_chromium_components_url_1formatter_UrlFormatter_nativeFormatUrlForSecurityDisplayOmitScheme*)dlsym(Sohandle, "Java_org_chromium_components_url_1formatter_UrlFormatter_nativeFormatUrlForSecurityDisplayOmitScheme");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jstring JNICALL Java_org_chromium_components_variations_VariationsAssociatedData_nativeGetFeedbackVariations(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_components_variations_VariationsAssociatedData_nativeGetFeedbackVariations* TargetFunc = 
		(Origin_Java_org_chromium_components_variations_VariationsAssociatedData_nativeGetFeedbackVariations*)dlsym(Sohandle, "Java_org_chromium_components_variations_VariationsAssociatedData_nativeGetFeedbackVariations");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT jstring JNICALL Java_org_chromium_components_variations_VariationsAssociatedData_nativeGetVariationParamValue(JNIEnv* arg0, jobject arg1, jstring arg2, jstring arg3){
	Origin_Java_org_chromium_components_variations_VariationsAssociatedData_nativeGetVariationParamValue* TargetFunc = 
		(Origin_Java_org_chromium_components_variations_VariationsAssociatedData_nativeGetVariationParamValue*)dlsym(Sohandle, "Java_org_chromium_components_variations_VariationsAssociatedData_nativeGetVariationParamValue");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_components_web_1contents_1delegate_1android_ColorChooserAndroid_nativeOnColorChosen(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_components_web_1contents_1delegate_1android_ColorChooserAndroid_nativeOnColorChosen* TargetFunc = 
		(Origin_Java_org_chromium_components_web_1contents_1delegate_1android_ColorChooserAndroid_nativeOnColorChosen*)dlsym(Sohandle, "Java_org_chromium_components_web_1contents_1delegate_1android_ColorChooserAndroid_nativeOnColorChosen");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_1public_browser_LoadUrlParams_nativeIsDataScheme(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_chromium_content_1public_browser_LoadUrlParams_nativeIsDataScheme* TargetFunc = 
		(Origin_Java_org_chromium_content_1public_browser_LoadUrlParams_nativeIsDataScheme*)dlsym(Sohandle, "Java_org_chromium_content_1public_browser_LoadUrlParams_nativeIsDataScheme");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jbyteArray JNICALL Java_org_chromium_content_1public_common_ResourceRequestBody_nativeCreateResourceRequestBodyFromBytes(JNIEnv* arg0, jobject arg1, jbyteArray arg2){
	Origin_Java_org_chromium_content_1public_common_ResourceRequestBody_nativeCreateResourceRequestBodyFromBytes* TargetFunc = 
		(Origin_Java_org_chromium_content_1public_common_ResourceRequestBody_nativeCreateResourceRequestBodyFromBytes*)dlsym(Sohandle, "Java_org_chromium_content_1public_common_ResourceRequestBody_nativeCreateResourceRequestBodyFromBytes");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_1public_common_UseZoomForDSFPolicy_nativeIsUseZoomForDSFEnabled(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_content_1public_common_UseZoomForDSFPolicy_nativeIsUseZoomForDSFEnabled* TargetFunc = 
		(Origin_Java_org_chromium_content_1public_common_UseZoomForDSFPolicy_nativeIsUseZoomForDSFEnabled*)dlsym(Sohandle, "Java_org_chromium_content_1public_common_UseZoomForDSFPolicy_nativeIsUseZoomForDSFEnabled");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_chromium_content_app_ContentChildProcessServiceDelegate_nativeInitChildProcess(JNIEnv* arg0, jobject arg1, jint arg2, jlong arg3){
	Origin_Java_org_chromium_content_app_ContentChildProcessServiceDelegate_nativeInitChildProcess* TargetFunc = 
		(Origin_Java_org_chromium_content_app_ContentChildProcessServiceDelegate_nativeInitChildProcess*)dlsym(Sohandle, "Java_org_chromium_content_app_ContentChildProcessServiceDelegate_nativeInitChildProcess");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_app_ContentChildProcessServiceDelegate_nativeRetrieveFileDescriptorsIdsToKeys(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_content_app_ContentChildProcessServiceDelegate_nativeRetrieveFileDescriptorsIdsToKeys* TargetFunc = 
		(Origin_Java_org_chromium_content_app_ContentChildProcessServiceDelegate_nativeRetrieveFileDescriptorsIdsToKeys*)dlsym(Sohandle, "Java_org_chromium_content_app_ContentChildProcessServiceDelegate_nativeRetrieveFileDescriptorsIdsToKeys");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_chromium_content_app_ContentChildProcessServiceDelegate_nativeShutdownMainThread(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_content_app_ContentChildProcessServiceDelegate_nativeShutdownMainThread* TargetFunc = 
		(Origin_Java_org_chromium_content_app_ContentChildProcessServiceDelegate_nativeShutdownMainThread*)dlsym(Sohandle, "Java_org_chromium_content_app_ContentChildProcessServiceDelegate_nativeShutdownMainThread");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT jint JNICALL Java_org_chromium_content_app_ContentMain_nativeStart(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_content_app_ContentMain_nativeStart* TargetFunc = 
		(Origin_Java_org_chromium_content_app_ContentMain_nativeStart*)dlsym(Sohandle, "Java_org_chromium_content_app_ContentMain_nativeStart");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT jlong JNICALL Java_org_chromium_content_browser_accessibility_captioning_CaptioningController_nativeInit(JNIEnv* arg0, jobject arg1, jobject arg2){
	Origin_Java_org_chromium_content_browser_accessibility_captioning_CaptioningController_nativeInit* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_captioning_CaptioningController_nativeInit*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_captioning_CaptioningController_nativeInit");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_accessibility_captioning_CaptioningController_nativeSetTextTrackSettings(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3, jstring arg4, jstring arg5, jstring arg6, jstring arg7, jstring arg8, jstring arg9, jstring arg10){
	Origin_Java_org_chromium_content_browser_accessibility_captioning_CaptioningController_nativeSetTextTrackSettings* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_captioning_CaptioningController_nativeSetTextTrackSettings*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_captioning_CaptioningController_nativeSetTextTrackSettings");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeAdjustSlider(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jboolean arg4){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeAdjustSlider* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeAdjustSlider*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeAdjustSlider");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeAreInlineTextBoxesLoaded(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeAreInlineTextBoxesLoaded* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeAreInlineTextBoxesLoaded*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeAreInlineTextBoxesLoaded");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeBlur(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeBlur* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeBlur*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeBlur");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeClick(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeClick* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeClick*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeClick");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeEnable(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeEnable* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeEnable*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeEnable");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jint JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeFindElementType(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jstring arg4, jboolean arg5){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeFindElementType* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeFindElementType*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeFindElementType");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeFocus(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeFocus* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeFocus*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeFocus");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jintArray JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetCharacterBoundingBoxes(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4, jint arg5){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetCharacterBoundingBoxes* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetCharacterBoundingBoxes*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetCharacterBoundingBoxes");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT jint JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetEditableTextSelectionEnd(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetEditableTextSelectionEnd* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetEditableTextSelectionEnd*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetEditableTextSelectionEnd");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jint JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetEditableTextSelectionStart(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetEditableTextSelectionStart* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetEditableTextSelectionStart*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetEditableTextSelectionStart");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jint JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetIdForElementAfterElementHostingAutofillPopup(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetIdForElementAfterElementHostingAutofillPopup* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetIdForElementAfterElementHostingAutofillPopup*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetIdForElementAfterElementHostingAutofillPopup");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jint JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetRootId(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetRootId* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetRootId*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetRootId");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jstring JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetSupportedHtmlElementTypes(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetSupportedHtmlElementTypes* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetSupportedHtmlElementTypes*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetSupportedHtmlElementTypes");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jint JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetTextLength(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetTextLength* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetTextLength*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeGetTextLength");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jlong JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeInit(JNIEnv* arg0, jobject arg1, jobject arg2){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeInit* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeInit*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeInit");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeIsAutofillPopupNode(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeIsAutofillPopupNode* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeIsAutofillPopupNode*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeIsAutofillPopupNode");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeIsEditableText(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeIsEditableText* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeIsEditableText*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeIsEditableText");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeIsEnabled(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeIsEnabled* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeIsEnabled*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeIsEnabled");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeIsFocused(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeIsFocused* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeIsFocused*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeIsFocused");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeIsNodeValid(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeIsNodeValid* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeIsNodeValid*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeIsNodeValid");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeIsSlider(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeIsSlider* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeIsSlider*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeIsSlider");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeLoadInlineTextBoxes(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeLoadInlineTextBoxes* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeLoadInlineTextBoxes*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeLoadInlineTextBoxes");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeNextAtGranularity(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jboolean arg4, jint arg5, jint arg6){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeNextAtGranularity* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeNextAtGranularity*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeNextAtGranularity");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeOnAutofillPopupDismissed(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeOnAutofillPopupDismissed* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeOnAutofillPopupDismissed*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeOnAutofillPopupDismissed");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeOnAutofillPopupDisplayed(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeOnAutofillPopupDisplayed* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeOnAutofillPopupDisplayed*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeOnAutofillPopupDisplayed");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativePopulateAccessibilityEvent(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3, jint arg4, jint arg5){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativePopulateAccessibilityEvent* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativePopulateAccessibilityEvent*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativePopulateAccessibilityEvent");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativePopulateAccessibilityNodeInfo(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3, jint arg4){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativePopulateAccessibilityNodeInfo* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativePopulateAccessibilityNodeInfo*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativePopulateAccessibilityNodeInfo");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativePreviousAtGranularity(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jboolean arg4, jint arg5, jint arg6){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativePreviousAtGranularity* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativePreviousAtGranularity*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativePreviousAtGranularity");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeScroll(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeScroll* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeScroll*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeScroll");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeScrollToMakeNodeVisible(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeScrollToMakeNodeVisible* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeScrollToMakeNodeVisible*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeScrollToMakeNodeVisible");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeSetAccessibilityFocus(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeSetAccessibilityFocus* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeSetAccessibilityFocus*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeSetAccessibilityFocus");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeSetSelection(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4, jint arg5){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeSetSelection* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeSetSelection*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeSetSelection");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeSetTextFieldValue(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jstring arg4){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeSetTextFieldValue* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeSetTextFieldValue*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeSetTextFieldValue");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeShowContextMenu(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeShowContextMenu* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeShowContextMenu*)dlsym(Sohandle, "Java_org_chromium_content_browser_accessibility_WebContentsAccessibilityImpl_nativeShowContextMenu");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeCompleteInit(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeCompleteInit* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeCompleteInit*)dlsym(Sohandle, "Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeCompleteInit");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeDestroy(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeDestroy* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeDestroy*)dlsym(Sohandle, "Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeDestroy");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeGetCompositorOffset(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3){
	Origin_Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeGetCompositorOffset* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeGetCompositorOffset*)dlsym(Sohandle, "Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeGetCompositorOffset");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jlong JNICALL Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeInit(JNIEnv* arg0, jobject arg1, jlong arg2, jlong arg3, jboolean arg4){
	Origin_Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeInit* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeInit*)dlsym(Sohandle, "Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeInit");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT jobject JNICALL Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeLookupSurfaceForTesting(JNIEnv* arg0, jobject arg1, jint arg2){
	Origin_Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeLookupSurfaceForTesting* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeLookupSurfaceForTesting*)dlsym(Sohandle, "Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeLookupSurfaceForTesting");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jint JNICALL Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeRegisterSurface(JNIEnv* arg0, jobject arg1, jobject arg2){
	Origin_Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeRegisterSurface* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeRegisterSurface*)dlsym(Sohandle, "Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeRegisterSurface");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeUnregisterSurface(JNIEnv* arg0, jobject arg1, jint arg2){
	Origin_Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeUnregisterSurface* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeUnregisterSurface*)dlsym(Sohandle, "Java_org_chromium_content_browser_androidoverlay_DialogOverlayImpl_nativeUnregisterSurface");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jstring JNICALL Java_org_chromium_content_browser_AppWebMessagePort_nativeDecodeStringMessage(JNIEnv* arg0, jobject arg1, jbyteArray arg2){
	Origin_Java_org_chromium_content_browser_AppWebMessagePort_nativeDecodeStringMessage* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_AppWebMessagePort_nativeDecodeStringMessage*)dlsym(Sohandle, "Java_org_chromium_content_browser_AppWebMessagePort_nativeDecodeStringMessage");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jbyteArray JNICALL Java_org_chromium_content_browser_AppWebMessagePort_nativeEncodeStringMessage(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_chromium_content_browser_AppWebMessagePort_nativeEncodeStringMessage* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_AppWebMessagePort_nativeEncodeStringMessage*)dlsym(Sohandle, "Java_org_chromium_content_browser_AppWebMessagePort_nativeEncodeStringMessage");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_AudioFocusDelegate_nativeOnResume(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_AudioFocusDelegate_nativeOnResume* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_AudioFocusDelegate_nativeOnResume*)dlsym(Sohandle, "Java_org_chromium_content_browser_AudioFocusDelegate_nativeOnResume");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_AudioFocusDelegate_nativeOnStartDucking(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_AudioFocusDelegate_nativeOnStartDucking* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_AudioFocusDelegate_nativeOnStartDucking*)dlsym(Sohandle, "Java_org_chromium_content_browser_AudioFocusDelegate_nativeOnStartDucking");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_AudioFocusDelegate_nativeOnStopDucking(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_AudioFocusDelegate_nativeOnStopDucking* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_AudioFocusDelegate_nativeOnStopDucking*)dlsym(Sohandle, "Java_org_chromium_content_browser_AudioFocusDelegate_nativeOnStopDucking");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_AudioFocusDelegate_nativeOnSuspend(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_AudioFocusDelegate_nativeOnSuspend* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_AudioFocusDelegate_nativeOnSuspend*)dlsym(Sohandle, "Java_org_chromium_content_browser_AudioFocusDelegate_nativeOnSuspend");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_AudioFocusDelegate_nativeRecordSessionDuck(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_AudioFocusDelegate_nativeRecordSessionDuck* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_AudioFocusDelegate_nativeRecordSessionDuck*)dlsym(Sohandle, "Java_org_chromium_content_browser_AudioFocusDelegate_nativeRecordSessionDuck");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_BackgroundSyncNetworkObserver_nativeNotifyConnectionTypeChanged(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_BackgroundSyncNetworkObserver_nativeNotifyConnectionTypeChanged* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_BackgroundSyncNetworkObserver_nativeNotifyConnectionTypeChanged*)dlsym(Sohandle, "Java_org_chromium_content_browser_BackgroundSyncNetworkObserver_nativeNotifyConnectionTypeChanged");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_BrowserStartupController_nativeFlushStartupTasks(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_content_browser_BrowserStartupController_nativeFlushStartupTasks* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_BrowserStartupController_nativeFlushStartupTasks*)dlsym(Sohandle, "Java_org_chromium_content_browser_BrowserStartupController_nativeFlushStartupTasks");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_BrowserStartupController_nativeIsOfficialBuild(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_content_browser_BrowserStartupController_nativeIsOfficialBuild* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_BrowserStartupController_nativeIsOfficialBuild*)dlsym(Sohandle, "Java_org_chromium_content_browser_BrowserStartupController_nativeIsOfficialBuild");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_BrowserStartupController_nativeIsPluginEnabled(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_content_browser_BrowserStartupController_nativeIsPluginEnabled* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_BrowserStartupController_nativeIsPluginEnabled*)dlsym(Sohandle, "Java_org_chromium_content_browser_BrowserStartupController_nativeIsPluginEnabled");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_BrowserStartupController_nativeSetCommandLineFlags(JNIEnv* arg0, jobject arg1, jboolean arg2, jstring arg3){
	Origin_Java_org_chromium_content_browser_BrowserStartupController_nativeSetCommandLineFlags* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_BrowserStartupController_nativeSetCommandLineFlags*)dlsym(Sohandle, "Java_org_chromium_content_browser_BrowserStartupController_nativeSetCommandLineFlags");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ChildProcessLauncherHelper_nativeOnChildProcessStarted(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_ChildProcessLauncherHelper_nativeOnChildProcessStarted* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ChildProcessLauncherHelper_nativeOnChildProcessStarted*)dlsym(Sohandle, "Java_org_chromium_content_browser_ChildProcessLauncherHelper_nativeOnChildProcessStarted");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_ContentFeatureList_nativeIsEnabled(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_chromium_content_browser_ContentFeatureList_nativeIsEnabled* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentFeatureList_nativeIsEnabled*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentFeatureList_nativeIsEnabled");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ContentVideoView_nativeDidExitFullscreen(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_chromium_content_browser_ContentVideoView_nativeDidExitFullscreen* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentVideoView_nativeDidExitFullscreen*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentVideoView_nativeDidExitFullscreen");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jobject JNICALL Java_org_chromium_content_browser_ContentVideoView_nativeGetSingletonJavaContentVideoView(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_content_browser_ContentVideoView_nativeGetSingletonJavaContentVideoView* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentVideoView_nativeGetSingletonJavaContentVideoView*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentVideoView_nativeGetSingletonJavaContentVideoView");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ContentVideoView_nativeRecordExitFullscreenPlayback(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3, jlong arg4, jlong arg5){
	Origin_Java_org_chromium_content_browser_ContentVideoView_nativeRecordExitFullscreenPlayback* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentVideoView_nativeRecordExitFullscreenPlayback*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentVideoView_nativeRecordExitFullscreenPlayback");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ContentVideoView_nativeRecordFullscreenPlayback(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3, jboolean arg4){
	Origin_Java_org_chromium_content_browser_ContentVideoView_nativeRecordFullscreenPlayback* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentVideoView_nativeRecordFullscreenPlayback*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentVideoView_nativeRecordFullscreenPlayback");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ContentVideoView_nativeSetSurface(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3){
	Origin_Java_org_chromium_content_browser_ContentVideoView_nativeSetSurface* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentVideoView_nativeSetSurface*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentVideoView_nativeSetSurface");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jint JNICALL Java_org_chromium_content_browser_ContentViewCoreImpl_nativeGetTopControlsShrinkBlinkHeightPixForTesting(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_ContentViewCoreImpl_nativeGetTopControlsShrinkBlinkHeightPixForTesting* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentViewCoreImpl_nativeGetTopControlsShrinkBlinkHeightPixForTesting*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentViewCoreImpl_nativeGetTopControlsShrinkBlinkHeightPixForTesting");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jlong JNICALL Java_org_chromium_content_browser_ContentViewCoreImpl_nativeInit(JNIEnv* arg0, jobject arg1, jobject arg2, jobject arg3, jobject arg4, jfloat arg5){
	Origin_Java_org_chromium_content_browser_ContentViewCoreImpl_nativeInit* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentViewCoreImpl_nativeInit*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentViewCoreImpl_nativeInit");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ContentViewCoreImpl_nativeOnJavaContentViewCoreDestroyed(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_ContentViewCoreImpl_nativeOnJavaContentViewCoreDestroyed* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentViewCoreImpl_nativeOnJavaContentViewCoreDestroyed*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentViewCoreImpl_nativeOnJavaContentViewCoreDestroyed");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ContentViewCoreImpl_nativeResetGestureDetection(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_ContentViewCoreImpl_nativeResetGestureDetection* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentViewCoreImpl_nativeResetGestureDetection*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentViewCoreImpl_nativeResetGestureDetection");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSendOrientationChangeEvent(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSendOrientationChangeEvent* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSendOrientationChangeEvent*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSendOrientationChangeEvent");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSetDIPScale(JNIEnv* arg0, jobject arg1, jlong arg2, jfloat arg3){
	Origin_Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSetDIPScale* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSetDIPScale*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSetDIPScale");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSetDoubleTapSupportEnabled(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSetDoubleTapSupportEnabled* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSetDoubleTapSupportEnabled*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSetDoubleTapSupportEnabled");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSetFocus(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSetFocus* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSetFocus*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSetFocus");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSetHorizontalScrollBarEnable(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSetHorizontalScrollBarEnable* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSetHorizontalScrollBarEnable*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSetHorizontalScrollBarEnable");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSetMultiTouchZoomSupportEnabled(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSetMultiTouchZoomSupportEnabled* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSetMultiTouchZoomSupportEnabled*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSetMultiTouchZoomSupportEnabled");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSetVerticalScrollbarEnable(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSetVerticalScrollbarEnable* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSetVerticalScrollbarEnable*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentViewCoreImpl_nativeSetVerticalScrollbarEnable");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ContentViewCoreImpl_nativeUpdateWindowAndroid(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3){
	Origin_Java_org_chromium_content_browser_ContentViewCoreImpl_nativeUpdateWindowAndroid* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentViewCoreImpl_nativeUpdateWindowAndroid*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentViewCoreImpl_nativeUpdateWindowAndroid");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ContentViewRenderView_nativeDestroy(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_ContentViewRenderView_nativeDestroy* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentViewRenderView_nativeDestroy*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentViewRenderView_nativeDestroy");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jlong JNICALL Java_org_chromium_content_browser_ContentViewRenderView_nativeInit(JNIEnv* arg0, jobject arg1, jobject arg2){
	Origin_Java_org_chromium_content_browser_ContentViewRenderView_nativeInit* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentViewRenderView_nativeInit*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentViewRenderView_nativeInit");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ContentViewRenderView_nativeOnPhysicalBackingSizeChanged(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3, jint arg4, jint arg5){
	Origin_Java_org_chromium_content_browser_ContentViewRenderView_nativeOnPhysicalBackingSizeChanged* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentViewRenderView_nativeOnPhysicalBackingSizeChanged*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentViewRenderView_nativeOnPhysicalBackingSizeChanged");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ContentViewRenderView_nativeSetBackgroundColor(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_ContentViewRenderView_nativeSetBackgroundColor* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentViewRenderView_nativeSetBackgroundColor*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentViewRenderView_nativeSetBackgroundColor");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ContentViewRenderView_nativeSetCurrentWebContents(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3){
	Origin_Java_org_chromium_content_browser_ContentViewRenderView_nativeSetCurrentWebContents* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentViewRenderView_nativeSetCurrentWebContents*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentViewRenderView_nativeSetCurrentWebContents");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ContentViewRenderView_nativeSetOverlayVideoMode(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_chromium_content_browser_ContentViewRenderView_nativeSetOverlayVideoMode* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentViewRenderView_nativeSetOverlayVideoMode*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentViewRenderView_nativeSetOverlayVideoMode");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ContentViewRenderView_nativeSurfaceChanged(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4, jint arg5, jobject arg6){
	Origin_Java_org_chromium_content_browser_ContentViewRenderView_nativeSurfaceChanged* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentViewRenderView_nativeSurfaceChanged*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentViewRenderView_nativeSurfaceChanged");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ContentViewRenderView_nativeSurfaceCreated(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_ContentViewRenderView_nativeSurfaceCreated* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentViewRenderView_nativeSurfaceCreated*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentViewRenderView_nativeSurfaceCreated");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ContentViewRenderView_nativeSurfaceDestroyed(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_ContentViewRenderView_nativeSurfaceDestroyed* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentViewRenderView_nativeSurfaceDestroyed*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentViewRenderView_nativeSurfaceDestroyed");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ContentViewStatics_nativeSetWebKitSharedTimersSuspended(JNIEnv* arg0, jobject arg1, jboolean arg2){
	Origin_Java_org_chromium_content_browser_ContentViewStatics_nativeSetWebKitSharedTimersSuspended* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ContentViewStatics_nativeSetWebKitSharedTimersSuspended*)dlsym(Sohandle, "Java_org_chromium_content_browser_ContentViewStatics_nativeSetWebKitSharedTimersSuspended");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ExtendPluginManager_nativeSendMethods(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jint arg4){
	Origin_Java_org_chromium_content_browser_ExtendPluginManager_nativeSendMethods* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ExtendPluginManager_nativeSendMethods*)dlsym(Sohandle, "Java_org_chromium_content_browser_ExtendPluginManager_nativeSendMethods");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_ExtendPluginManager_nativeSetExtendTextureScale(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jint arg4, jfloat arg5, jfloat arg6){
	Origin_Java_org_chromium_content_browser_ExtendPluginManager_nativeSetExtendTextureScale* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_ExtendPluginManager_nativeSetExtendTextureScale*)dlsym(Sohandle, "Java_org_chromium_content_browser_ExtendPluginManager_nativeSetExtendTextureScale");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCancelPendingReload(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCancelPendingReload* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCancelPendingReload*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCancelPendingReload");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCanCopyStateOver(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCanCopyStateOver* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCanCopyStateOver*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCanCopyStateOver");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCanGoBack(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCanGoBack* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCanGoBack*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCanGoBack");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCanGoForward(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCanGoForward* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCanGoForward*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCanGoForward");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCanGoToOffset(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCanGoToOffset* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCanGoToOffset*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCanGoToOffset");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCanPruneAllButLastCommitted(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCanPruneAllButLastCommitted* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCanPruneAllButLastCommitted*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCanPruneAllButLastCommitted");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeClearHistory(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeClearHistory* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeClearHistory*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeClearHistory");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeClearSslPreferences(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeClearSslPreferences* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeClearSslPreferences*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeClearSslPreferences");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeContinuePendingReload(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeContinuePendingReload* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeContinuePendingReload*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeContinuePendingReload");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCopyStateFrom(JNIEnv* arg0, jobject arg1, jlong arg2, jlong arg3, jboolean arg4){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCopyStateFrom* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCopyStateFrom*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCopyStateFrom");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCopyStateFromAndPrune(JNIEnv* arg0, jobject arg1, jlong arg2, jlong arg3, jboolean arg4){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCopyStateFromAndPrune* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCopyStateFromAndPrune*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeCopyStateFromAndPrune");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetDirectedNavigationHistory(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3, jboolean arg4, jint arg5){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetDirectedNavigationHistory* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetDirectedNavigationHistory*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetDirectedNavigationHistory");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT jobject JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetEntryAtIndex(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetEntryAtIndex* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetEntryAtIndex*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetEntryAtIndex");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jstring JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetEntryExtraData(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jstring arg4){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetEntryExtraData* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetEntryExtraData*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetEntryExtraData");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT jint JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetLastCommittedEntryIndex(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetLastCommittedEntryIndex* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetLastCommittedEntryIndex*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetLastCommittedEntryIndex");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jint JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetNavigationHistory(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetNavigationHistory* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetNavigationHistory*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetNavigationHistory");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jstring JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetOriginalUrlForVisibleNavigationEntry(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetOriginalUrlForVisibleNavigationEntry* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetOriginalUrlForVisibleNavigationEntry*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetOriginalUrlForVisibleNavigationEntry");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jobject JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetPendingEntry(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetPendingEntry* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetPendingEntry*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetPendingEntry");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetUseDesktopUserAgent(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetUseDesktopUserAgent* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetUseDesktopUserAgent*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGetUseDesktopUserAgent");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGoBack(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGoBack* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGoBack*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGoBack");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGoForward(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGoForward* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGoForward*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGoForward");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGoToNavigationIndex(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGoToNavigationIndex* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGoToNavigationIndex*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGoToNavigationIndex");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGoToOffset(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGoToOffset* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGoToOffset*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeGoToOffset");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeIsInitialNavigation(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeIsInitialNavigation* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeIsInitialNavigation*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeIsInitialNavigation");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeLoadIfNecessary(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeLoadIfNecessary* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeLoadIfNecessary*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeLoadIfNecessary");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeLoadUrl(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jint arg4, jint arg5, jstring arg6, jint arg7, jint arg8, jstring arg9, jobject arg10, jstring arg11, jstring arg12, jstring arg13, jboolean arg14, jboolean arg15, jboolean arg16){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeLoadUrl* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeLoadUrl*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeLoadUrl");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeReload(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeReload* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeReload*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeReload");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeReloadBypassingCache(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeReloadBypassingCache* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeReloadBypassingCache*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeReloadBypassingCache");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeRemoveEntryAtIndex(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeRemoveEntryAtIndex* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeRemoveEntryAtIndex*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeRemoveEntryAtIndex");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeRequestRestoreLoad(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeRequestRestoreLoad* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeRequestRestoreLoad*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeRequestRestoreLoad");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeSetEntryExtraData(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jstring arg4, jstring arg5){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeSetEntryExtraData* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeSetEntryExtraData*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeSetEntryExtraData");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeSetUseDesktopUserAgent(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3, jboolean arg4){
	Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeSetUseDesktopUserAgent* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeSetUseDesktopUserAgent*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_NavigationControllerImpl_nativeSetUseDesktopUserAgent");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT jobject JNICALL Java_org_chromium_content_browser_framehost_RenderFrameHostImpl_nativeGetAndroidOverlayRoutingToken(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_framehost_RenderFrameHostImpl_nativeGetAndroidOverlayRoutingToken* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_RenderFrameHostImpl_nativeGetAndroidOverlayRoutingToken*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_RenderFrameHostImpl_nativeGetAndroidOverlayRoutingToken");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_framehost_RenderFrameHostImpl_nativeGetCanonicalUrlForSharing(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3){
	Origin_Java_org_chromium_content_browser_framehost_RenderFrameHostImpl_nativeGetCanonicalUrlForSharing* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_RenderFrameHostImpl_nativeGetCanonicalUrlForSharing*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_RenderFrameHostImpl_nativeGetCanonicalUrlForSharing");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jstring JNICALL Java_org_chromium_content_browser_framehost_RenderFrameHostImpl_nativeGetLastCommittedURL(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_framehost_RenderFrameHostImpl_nativeGetLastCommittedURL* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_RenderFrameHostImpl_nativeGetLastCommittedURL*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_RenderFrameHostImpl_nativeGetLastCommittedURL");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_framehost_RenderFrameHostImpl_nativeNotifyUserActivation(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_framehost_RenderFrameHostImpl_nativeNotifyUserActivation* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_framehost_RenderFrameHostImpl_nativeNotifyUserActivation*)dlsym(Sohandle, "Java_org_chromium_content_browser_framehost_RenderFrameHostImpl_nativeNotifyUserActivation");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jlong JNICALL Java_org_chromium_content_browser_GestureListenerManagerImpl_nativeInit(JNIEnv* arg0, jobject arg1, jobject arg2){
	Origin_Java_org_chromium_content_browser_GestureListenerManagerImpl_nativeInit* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_GestureListenerManagerImpl_nativeInit*)dlsym(Sohandle, "Java_org_chromium_content_browser_GestureListenerManagerImpl_nativeInit");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_GestureListenerManagerImpl_nativeReset(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_GestureListenerManagerImpl_nativeReset* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_GestureListenerManagerImpl_nativeReset*)dlsym(Sohandle, "Java_org_chromium_content_browser_GestureListenerManagerImpl_nativeReset");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_GpuProcessCallback_nativeCompleteScopedSurfaceRequest(JNIEnv* arg0, jobject arg1, jobject arg2, jobject arg3){
	Origin_Java_org_chromium_content_browser_GpuProcessCallback_nativeCompleteScopedSurfaceRequest* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_GpuProcessCallback_nativeCompleteScopedSurfaceRequest*)dlsym(Sohandle, "Java_org_chromium_content_browser_GpuProcessCallback_nativeCompleteScopedSurfaceRequest");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jobject JNICALL Java_org_chromium_content_browser_GpuProcessCallback_nativeGetViewSurface(JNIEnv* arg0, jobject arg1, jint arg2){
	Origin_Java_org_chromium_content_browser_GpuProcessCallback_nativeGetViewSurface* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_GpuProcessCallback_nativeGetViewSurface*)dlsym(Sohandle, "Java_org_chromium_content_browser_GpuProcessCallback_nativeGetViewSurface");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_input_DateTimeChooserAndroid_nativeCancelDialog(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_input_DateTimeChooserAndroid_nativeCancelDialog* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_DateTimeChooserAndroid_nativeCancelDialog*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_DateTimeChooserAndroid_nativeCancelDialog");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_input_DateTimeChooserAndroid_nativeReplaceDateTime(JNIEnv* arg0, jobject arg1, jlong arg2, jdouble arg3){
	Origin_Java_org_chromium_content_browser_input_DateTimeChooserAndroid_nativeReplaceDateTime* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_DateTimeChooserAndroid_nativeReplaceDateTime*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_DateTimeChooserAndroid_nativeReplaceDateTime");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeAdvanceFocusInForm(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeAdvanceFocusInForm* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeAdvanceFocusInForm*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeAdvanceFocusInForm");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeAppendBackgroundColorSpan(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4, jint arg5){
	Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeAppendBackgroundColorSpan* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeAppendBackgroundColorSpan*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeAppendBackgroundColorSpan");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeAppendSuggestionSpan(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4, jboolean arg5, jint arg6, jint arg7, jobjectArray arg8){
	Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeAppendSuggestionSpan* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeAppendSuggestionSpan*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeAppendSuggestionSpan");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeAppendUnderlineSpan(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4){
	Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeAppendUnderlineSpan* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeAppendUnderlineSpan*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeAppendUnderlineSpan");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeCommitText(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3, jstring arg4, jint arg5){
	Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeCommitText* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeCommitText*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeCommitText");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeDeleteSurroundingText(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4){
	Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeDeleteSurroundingText* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeDeleteSurroundingText*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeDeleteSurroundingText");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeDeleteSurroundingTextInCodePoints(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4){
	Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeDeleteSurroundingTextInCodePoints* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeDeleteSurroundingTextInCodePoints*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeDeleteSurroundingTextInCodePoints");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeFinishComposingText(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeFinishComposingText* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeFinishComposingText*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeFinishComposingText");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jlong JNICALL Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeInit(JNIEnv* arg0, jobject arg1, jobject arg2){
	Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeInit* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeInit*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeInit");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeRequestCursorUpdate(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3, jboolean arg4){
	Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeRequestCursorUpdate* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeRequestCursorUpdate*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeRequestCursorUpdate");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeRequestTextInputStateUpdate(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeRequestTextInputStateUpdate* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeRequestTextInputStateUpdate*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeRequestTextInputStateUpdate");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeSendKeyEvent(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3, jint arg4, jint arg5, jlong arg6, jint arg7, jint arg8, jboolean arg9, jint arg10){
	Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeSendKeyEvent* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeSendKeyEvent*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeSendKeyEvent");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeSetComposingRegion(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4){
	Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeSetComposingRegion* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeSetComposingRegion*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeSetComposingRegion");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeSetComposingText(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3, jstring arg4, jint arg5){
	Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeSetComposingText* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeSetComposingText*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeSetComposingText");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeSetEditableSelectionOffsets(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4){
	Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeSetEditableSelectionOffsets* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeSetEditableSelectionOffsets*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_ImeAdapterImpl_nativeSetEditableSelectionOffsets");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT jobject JNICALL Java_org_chromium_content_browser_input_SelectPopup_nativeGetWindowAndroid(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_input_SelectPopup_nativeGetWindowAndroid* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_SelectPopup_nativeGetWindowAndroid*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_SelectPopup_nativeGetWindowAndroid");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jlong JNICALL Java_org_chromium_content_browser_input_SelectPopup_nativeInit(JNIEnv* arg0, jobject arg1, jobject arg2){
	Origin_Java_org_chromium_content_browser_input_SelectPopup_nativeInit* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_SelectPopup_nativeInit*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_SelectPopup_nativeInit");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_input_SelectPopup_nativeSelectMenuItems(JNIEnv* arg0, jobject arg1, jlong arg2, jlong arg3, jintArray arg4){
	Origin_Java_org_chromium_content_browser_input_SelectPopup_nativeSelectMenuItems* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_SelectPopup_nativeSelectMenuItems*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_SelectPopup_nativeSelectMenuItems");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_input_TextSuggestionHost_nativeApplySpellCheckSuggestion(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3){
	Origin_Java_org_chromium_content_browser_input_TextSuggestionHost_nativeApplySpellCheckSuggestion* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_TextSuggestionHost_nativeApplySpellCheckSuggestion*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_TextSuggestionHost_nativeApplySpellCheckSuggestion");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_input_TextSuggestionHost_nativeApplyTextSuggestion(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4){
	Origin_Java_org_chromium_content_browser_input_TextSuggestionHost_nativeApplyTextSuggestion* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_TextSuggestionHost_nativeApplyTextSuggestion*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_TextSuggestionHost_nativeApplyTextSuggestion");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_input_TextSuggestionHost_nativeDeleteActiveSuggestionRange(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_input_TextSuggestionHost_nativeDeleteActiveSuggestionRange* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_TextSuggestionHost_nativeDeleteActiveSuggestionRange*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_TextSuggestionHost_nativeDeleteActiveSuggestionRange");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jlong JNICALL Java_org_chromium_content_browser_input_TextSuggestionHost_nativeInit(JNIEnv* arg0, jobject arg1, jobject arg2){
	Origin_Java_org_chromium_content_browser_input_TextSuggestionHost_nativeInit* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_TextSuggestionHost_nativeInit*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_TextSuggestionHost_nativeInit");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_input_TextSuggestionHost_nativeOnNewWordAddedToDictionary(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3){
	Origin_Java_org_chromium_content_browser_input_TextSuggestionHost_nativeOnNewWordAddedToDictionary* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_TextSuggestionHost_nativeOnNewWordAddedToDictionary*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_TextSuggestionHost_nativeOnNewWordAddedToDictionary");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_input_TextSuggestionHost_nativeOnSuggestionMenuClosed(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_input_TextSuggestionHost_nativeOnSuggestionMenuClosed* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_input_TextSuggestionHost_nativeOnSuggestionMenuClosed*)dlsym(Sohandle, "Java_org_chromium_content_browser_input_TextSuggestionHost_nativeOnSuggestionMenuClosed");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_InterstitialPageDelegateAndroid_nativeDontProceed(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_InterstitialPageDelegateAndroid_nativeDontProceed* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_InterstitialPageDelegateAndroid_nativeDontProceed*)dlsym(Sohandle, "Java_org_chromium_content_browser_InterstitialPageDelegateAndroid_nativeDontProceed");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jlong JNICALL Java_org_chromium_content_browser_InterstitialPageDelegateAndroid_nativeInit(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_chromium_content_browser_InterstitialPageDelegateAndroid_nativeInit* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_InterstitialPageDelegateAndroid_nativeInit*)dlsym(Sohandle, "Java_org_chromium_content_browser_InterstitialPageDelegateAndroid_nativeInit");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_InterstitialPageDelegateAndroid_nativeProceed(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_InterstitialPageDelegateAndroid_nativeProceed* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_InterstitialPageDelegateAndroid_nativeProceed*)dlsym(Sohandle, "Java_org_chromium_content_browser_InterstitialPageDelegateAndroid_nativeProceed");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_JavascriptInjectorImpl_nativeAddInterface(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3, jstring arg4, jclass arg5){
	Origin_Java_org_chromium_content_browser_JavascriptInjectorImpl_nativeAddInterface* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_JavascriptInjectorImpl_nativeAddInterface*)dlsym(Sohandle, "Java_org_chromium_content_browser_JavascriptInjectorImpl_nativeAddInterface");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT jlong JNICALL Java_org_chromium_content_browser_JavascriptInjectorImpl_nativeInit(JNIEnv* arg0, jobject arg1, jobject arg2, jobject arg3){
	Origin_Java_org_chromium_content_browser_JavascriptInjectorImpl_nativeInit* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_JavascriptInjectorImpl_nativeInit*)dlsym(Sohandle, "Java_org_chromium_content_browser_JavascriptInjectorImpl_nativeInit");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_JavascriptInjectorImpl_nativeRemoveInterface(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3){
	Origin_Java_org_chromium_content_browser_JavascriptInjectorImpl_nativeRemoveInterface* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_JavascriptInjectorImpl_nativeRemoveInterface*)dlsym(Sohandle, "Java_org_chromium_content_browser_JavascriptInjectorImpl_nativeRemoveInterface");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_JavascriptInjectorImpl_nativeSetAllowInspection(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_chromium_content_browser_JavascriptInjectorImpl_nativeSetAllowInspection* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_JavascriptInjectorImpl_nativeSetAllowInspection*)dlsym(Sohandle, "Java_org_chromium_content_browser_JavascriptInjectorImpl_nativeSetAllowInspection");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_MediaSessionImpl_nativeDidReceiveAction(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_MediaSessionImpl_nativeDidReceiveAction* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_MediaSessionImpl_nativeDidReceiveAction*)dlsym(Sohandle, "Java_org_chromium_content_browser_MediaSessionImpl_nativeDidReceiveAction");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jobject JNICALL Java_org_chromium_content_browser_MediaSessionImpl_nativeGetMediaSessionFromWebContents(JNIEnv* arg0, jobject arg1, jobject arg2){
	Origin_Java_org_chromium_content_browser_MediaSessionImpl_nativeGetMediaSessionFromWebContents* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_MediaSessionImpl_nativeGetMediaSessionFromWebContents*)dlsym(Sohandle, "Java_org_chromium_content_browser_MediaSessionImpl_nativeGetMediaSessionFromWebContents");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_MediaSessionImpl_nativeResume(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_MediaSessionImpl_nativeResume* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_MediaSessionImpl_nativeResume*)dlsym(Sohandle, "Java_org_chromium_content_browser_MediaSessionImpl_nativeResume");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_MediaSessionImpl_nativeSeekBackward(JNIEnv* arg0, jobject arg1, jlong arg2, jlong arg3){
	Origin_Java_org_chromium_content_browser_MediaSessionImpl_nativeSeekBackward* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_MediaSessionImpl_nativeSeekBackward*)dlsym(Sohandle, "Java_org_chromium_content_browser_MediaSessionImpl_nativeSeekBackward");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_MediaSessionImpl_nativeSeekForward(JNIEnv* arg0, jobject arg1, jlong arg2, jlong arg3){
	Origin_Java_org_chromium_content_browser_MediaSessionImpl_nativeSeekForward* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_MediaSessionImpl_nativeSeekForward*)dlsym(Sohandle, "Java_org_chromium_content_browser_MediaSessionImpl_nativeSeekForward");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_MediaSessionImpl_nativeStop(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_MediaSessionImpl_nativeStop* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_MediaSessionImpl_nativeStop*)dlsym(Sohandle, "Java_org_chromium_content_browser_MediaSessionImpl_nativeStop");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_MediaSessionImpl_nativeSuspend(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_MediaSessionImpl_nativeSuspend* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_MediaSessionImpl_nativeSuspend*)dlsym(Sohandle, "Java_org_chromium_content_browser_MediaSessionImpl_nativeSuspend");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_MemoryDumperAndroid_nativeStartMemoryDump(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_content_browser_MemoryDumperAndroid_nativeStartMemoryDump* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_MemoryDumperAndroid_nativeStartMemoryDump*)dlsym(Sohandle, "Java_org_chromium_content_browser_MemoryDumperAndroid_nativeStartMemoryDump");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_MemoryMonitorAndroid_nativeGetMemoryInfoCallback(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3, jlong arg4, jlong arg5, jlong arg6){
	Origin_Java_org_chromium_content_browser_MemoryMonitorAndroid_nativeGetMemoryInfoCallback* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_MemoryMonitorAndroid_nativeGetMemoryInfoCallback*)dlsym(Sohandle, "Java_org_chromium_content_browser_MemoryMonitorAndroid_nativeGetMemoryInfoCallback");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_MemoryMonitorAndroid_nativeOnTrimMemory(JNIEnv* arg0, jobject arg1, jint arg2){
	Origin_Java_org_chromium_content_browser_MemoryMonitorAndroid_nativeOnTrimMemory* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_MemoryMonitorAndroid_nativeOnTrimMemory*)dlsym(Sohandle, "Java_org_chromium_content_browser_MemoryMonitorAndroid_nativeOnTrimMemory");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_MemoryTracingControllerAndroid_nativeDestroy(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_MemoryTracingControllerAndroid_nativeDestroy* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_MemoryTracingControllerAndroid_nativeDestroy*)dlsym(Sohandle, "Java_org_chromium_content_browser_MemoryTracingControllerAndroid_nativeDestroy");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jstring JNICALL Java_org_chromium_content_browser_MemoryTracingControllerAndroid_nativeGetDefaultCategories(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_content_browser_MemoryTracingControllerAndroid_nativeGetDefaultCategories* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_MemoryTracingControllerAndroid_nativeGetDefaultCategories*)dlsym(Sohandle, "Java_org_chromium_content_browser_MemoryTracingControllerAndroid_nativeGetDefaultCategories");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_MemoryTracingControllerAndroid_nativeGetKnownCategoryGroupsAsync(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_MemoryTracingControllerAndroid_nativeGetKnownCategoryGroupsAsync* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_MemoryTracingControllerAndroid_nativeGetKnownCategoryGroupsAsync*)dlsym(Sohandle, "Java_org_chromium_content_browser_MemoryTracingControllerAndroid_nativeGetKnownCategoryGroupsAsync");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jlong JNICALL Java_org_chromium_content_browser_MemoryTracingControllerAndroid_nativeInit(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_content_browser_MemoryTracingControllerAndroid_nativeInit* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_MemoryTracingControllerAndroid_nativeInit*)dlsym(Sohandle, "Java_org_chromium_content_browser_MemoryTracingControllerAndroid_nativeInit");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_MemoryTracingControllerAndroid_nativeStartTracing(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jstring arg4){
	Origin_Java_org_chromium_content_browser_MemoryTracingControllerAndroid_nativeStartTracing* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_MemoryTracingControllerAndroid_nativeStartTracing*)dlsym(Sohandle, "Java_org_chromium_content_browser_MemoryTracingControllerAndroid_nativeStartTracing");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_MemoryTracingControllerAndroid_nativeStopTracing(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_MemoryTracingControllerAndroid_nativeStopTracing* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_MemoryTracingControllerAndroid_nativeStopTracing*)dlsym(Sohandle, "Java_org_chromium_content_browser_MemoryTracingControllerAndroid_nativeStopTracing");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jlong JNICALL Java_org_chromium_content_browser_selection_SelectionPopupControllerImpl_nativeInit(JNIEnv* arg0, jobject arg1, jobject arg2){
	Origin_Java_org_chromium_content_browser_selection_SelectionPopupControllerImpl_nativeInit* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_selection_SelectionPopupControllerImpl_nativeInit*)dlsym(Sohandle, "Java_org_chromium_content_browser_selection_SelectionPopupControllerImpl_nativeInit");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_selection_SelectionPopupControllerImpl_nativeSetTextHandlesTemporarilyHidden(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_chromium_content_browser_selection_SelectionPopupControllerImpl_nativeSetTextHandlesTemporarilyHidden* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_selection_SelectionPopupControllerImpl_nativeSetTextHandlesTemporarilyHidden*)dlsym(Sohandle, "Java_org_chromium_content_browser_selection_SelectionPopupControllerImpl_nativeSetTextHandlesTemporarilyHidden");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_selection_SmartSelectionClient_nativeCancelAllRequests(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_selection_SmartSelectionClient_nativeCancelAllRequests* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_selection_SmartSelectionClient_nativeCancelAllRequests*)dlsym(Sohandle, "Java_org_chromium_content_browser_selection_SmartSelectionClient_nativeCancelAllRequests");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jlong JNICALL Java_org_chromium_content_browser_selection_SmartSelectionClient_nativeInit(JNIEnv* arg0, jobject arg1, jobject arg2){
	Origin_Java_org_chromium_content_browser_selection_SmartSelectionClient_nativeInit* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_selection_SmartSelectionClient_nativeInit*)dlsym(Sohandle, "Java_org_chromium_content_browser_selection_SmartSelectionClient_nativeInit");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_selection_SmartSelectionClient_nativeRequestSurroundingText(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4){
	Origin_Java_org_chromium_content_browser_selection_SmartSelectionClient_nativeRequestSurroundingText* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_selection_SmartSelectionClient_nativeRequestSurroundingText*)dlsym(Sohandle, "Java_org_chromium_content_browser_selection_SmartSelectionClient_nativeRequestSurroundingText");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_SpeechRecognition_nativeOnAudioEnd(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_SpeechRecognition_nativeOnAudioEnd* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_SpeechRecognition_nativeOnAudioEnd*)dlsym(Sohandle, "Java_org_chromium_content_browser_SpeechRecognition_nativeOnAudioEnd");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_SpeechRecognition_nativeOnAudioStart(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_SpeechRecognition_nativeOnAudioStart* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_SpeechRecognition_nativeOnAudioStart*)dlsym(Sohandle, "Java_org_chromium_content_browser_SpeechRecognition_nativeOnAudioStart");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_SpeechRecognition_nativeOnRecognitionEnd(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_SpeechRecognition_nativeOnRecognitionEnd* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_SpeechRecognition_nativeOnRecognitionEnd*)dlsym(Sohandle, "Java_org_chromium_content_browser_SpeechRecognition_nativeOnRecognitionEnd");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_SpeechRecognition_nativeOnRecognitionError(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_SpeechRecognition_nativeOnRecognitionError* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_SpeechRecognition_nativeOnRecognitionError*)dlsym(Sohandle, "Java_org_chromium_content_browser_SpeechRecognition_nativeOnRecognitionError");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_SpeechRecognition_nativeOnRecognitionResults(JNIEnv* arg0, jobject arg1, jlong arg2, jobjectArray arg3, jfloatArray arg4, jboolean arg5){
	Origin_Java_org_chromium_content_browser_SpeechRecognition_nativeOnRecognitionResults* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_SpeechRecognition_nativeOnRecognitionResults*)dlsym(Sohandle, "Java_org_chromium_content_browser_SpeechRecognition_nativeOnRecognitionResults");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_SpeechRecognition_nativeOnSoundEnd(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_SpeechRecognition_nativeOnSoundEnd* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_SpeechRecognition_nativeOnSoundEnd*)dlsym(Sohandle, "Java_org_chromium_content_browser_SpeechRecognition_nativeOnSoundEnd");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_SpeechRecognition_nativeOnSoundStart(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_SpeechRecognition_nativeOnSoundStart* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_SpeechRecognition_nativeOnSoundStart*)dlsym(Sohandle, "Java_org_chromium_content_browser_SpeechRecognition_nativeOnSoundStart");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jlong JNICALL Java_org_chromium_content_browser_TapDisambiguator_nativeInit(JNIEnv* arg0, jobject arg1, jobject arg2){
	Origin_Java_org_chromium_content_browser_TapDisambiguator_nativeInit* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_TapDisambiguator_nativeInit*)dlsym(Sohandle, "Java_org_chromium_content_browser_TapDisambiguator_nativeInit");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_TapDisambiguator_nativeResolveTapDisambiguation(JNIEnv* arg0, jobject arg1, jlong arg2, jlong arg3, jfloat arg4, jfloat arg5, jboolean arg6){
	Origin_Java_org_chromium_content_browser_TapDisambiguator_nativeResolveTapDisambiguation* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_TapDisambiguator_nativeResolveTapDisambiguation*)dlsym(Sohandle, "Java_org_chromium_content_browser_TapDisambiguator_nativeResolveTapDisambiguation");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_TracingControllerAndroid_nativeDestroy(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_TracingControllerAndroid_nativeDestroy* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_TracingControllerAndroid_nativeDestroy*)dlsym(Sohandle, "Java_org_chromium_content_browser_TracingControllerAndroid_nativeDestroy");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jstring JNICALL Java_org_chromium_content_browser_TracingControllerAndroid_nativeGetDefaultCategories(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_content_browser_TracingControllerAndroid_nativeGetDefaultCategories* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_TracingControllerAndroid_nativeGetDefaultCategories*)dlsym(Sohandle, "Java_org_chromium_content_browser_TracingControllerAndroid_nativeGetDefaultCategories");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_TracingControllerAndroid_nativeGetKnownCategoryGroupsAsync(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_TracingControllerAndroid_nativeGetKnownCategoryGroupsAsync* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_TracingControllerAndroid_nativeGetKnownCategoryGroupsAsync*)dlsym(Sohandle, "Java_org_chromium_content_browser_TracingControllerAndroid_nativeGetKnownCategoryGroupsAsync");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jlong JNICALL Java_org_chromium_content_browser_TracingControllerAndroid_nativeInit(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_content_browser_TracingControllerAndroid_nativeInit* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_TracingControllerAndroid_nativeInit*)dlsym(Sohandle, "Java_org_chromium_content_browser_TracingControllerAndroid_nativeInit");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_TracingControllerAndroid_nativeStartTracing(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jstring arg4){
	Origin_Java_org_chromium_content_browser_TracingControllerAndroid_nativeStartTracing* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_TracingControllerAndroid_nativeStartTracing*)dlsym(Sohandle, "Java_org_chromium_content_browser_TracingControllerAndroid_nativeStartTracing");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_TracingControllerAndroid_nativeStopTracing(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3){
	Origin_Java_org_chromium_content_browser_TracingControllerAndroid_nativeStopTracing* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_TracingControllerAndroid_nativeStopTracing*)dlsym(Sohandle, "Java_org_chromium_content_browser_TracingControllerAndroid_nativeStopTracing");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeAddMessageToDevToolsConsole(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jstring arg4){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeAddMessageToDevToolsConsole* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeAddMessageToDevToolsConsole*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeAddMessageToDevToolsConsole");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeAdjustSelectionByCharacterOffset(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4, jboolean arg5){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeAdjustSelectionByCharacterOffset* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeAdjustSelectionByCharacterOffset*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeAdjustSelectionByCharacterOffset");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeCollapseSelection(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeCollapseSelection* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeCollapseSelection*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeCollapseSelection");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeCopy(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeCopy* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeCopy*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeCopy");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeCut(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeCut* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeCut*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeCut");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeDestroyWebContents(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeDestroyWebContents* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeDestroyWebContents*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeDestroyWebContents");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeDidReceivedWeChatSelectionInfo(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jint arg4, jint arg5, jstring arg6, jstring arg7, jint arg8, jlong arg9){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeDidReceivedWeChatSelectionInfo* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeDidReceivedWeChatSelectionInfo*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeDidReceivedWeChatSelectionInfo");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeDismissTextHandles(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeDismissTextHandles* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeDismissTextHandles*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeDismissTextHandles");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jint JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeDownloadImage(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jboolean arg4, jint arg5, jboolean arg6, jobject arg7){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeDownloadImage* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeDownloadImage*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeDownloadImage");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeEvaluateJavaScript(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jobject arg4){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeEvaluateJavaScript* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeEvaluateJavaScript*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeEvaluateJavaScript");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeEvaluateJavaScriptForTests(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jobject arg4){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeEvaluateJavaScriptForTests* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeEvaluateJavaScriptForTests*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeEvaluateJavaScriptForTests");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeExitFullscreen(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeExitFullscreen* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeExitFullscreen*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeExitFullscreen");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeFocusLocationBarByDefault(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeFocusLocationBarByDefault* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeFocusLocationBarByDefault*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeFocusLocationBarByDefault");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jobject JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeFromNativePtr(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeFromNativePtr* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeFromNativePtr*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeFromNativePtr");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jint JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetBackgroundColor(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetBackgroundColor* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetBackgroundColor*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetBackgroundColor");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetContentBitmap(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4, jobject arg5){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetContentBitmap* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetContentBitmap*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetContentBitmap");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT jstring JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetEncoding(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetEncoding* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetEncoding*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetEncoding");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jobject JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetFullscreenVideoSize(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetFullscreenVideoSize* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetFullscreenVideoSize*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetFullscreenVideoSize");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jint JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetHeight(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetHeight* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetHeight*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetHeight");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetImageBitmapToFile(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jstring arg4, jstring arg5, jstring arg6, jobject arg7){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetImageBitmapToFile* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetImageBitmapToFile*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetImageBitmapToFile");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
}
JNIEXPORT jstring JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetLastCommittedURL(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetLastCommittedURL* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetLastCommittedURL*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetLastCommittedURL");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jobject JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetMainFrame(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetMainFrame* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetMainFrame*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetMainFrame");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jobject JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetOrCreateEventForwarder(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetOrCreateEventForwarder* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetOrCreateEventForwarder*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetOrCreateEventForwarder");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jstring JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetRefererURL(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetRefererURL* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetRefererURL*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetRefererURL");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetSelectionInfo(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetSelectionInfo* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetSelectionInfo*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetSelectionInfo");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT jint JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetThemeColor(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetThemeColor* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetThemeColor*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetThemeColor");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jstring JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetTitle(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetTitle* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetTitle*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetTitle");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jobject JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetTopLevelNativeWindow(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetTopLevelNativeWindow* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetTopLevelNativeWindow*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetTopLevelNativeWindow");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetTranslateSampleString(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetTranslateSampleString* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetTranslateSampleString*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetTranslateSampleString");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jstring JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetVisibleURL(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetVisibleURL* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetVisibleURL*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetVisibleURL");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jint JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetWidth(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetWidth* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetWidth*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeGetWidth");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeHasAccessedInitialDocument(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeHasAccessedInitialDocument* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeHasAccessedInitialDocument*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeHasAccessedInitialDocument");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeHasActiveEffectivelyFullscreenVideo(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeHasActiveEffectivelyFullscreenVideo* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeHasActiveEffectivelyFullscreenVideo*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeHasActiveEffectivelyFullscreenVideo");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeIsIncognito(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeIsIncognito* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeIsIncognito*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeIsIncognito");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeIsLoading(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeIsLoading* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeIsLoading*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeIsLoading");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeIsLoadingToDifferentDocument(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeIsLoadingToDifferentDocument* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeIsLoadingToDifferentDocument*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeIsLoadingToDifferentDocument");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeIsPictureInPictureAllowedForFullscreenVideo(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeIsPictureInPictureAllowedForFullscreenVideo* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeIsPictureInPictureAllowedForFullscreenVideo*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeIsPictureInPictureAllowedForFullscreenVideo");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeIsRenderWidgetHostViewReady(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeIsRenderWidgetHostViewReady* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeIsRenderWidgetHostViewReady*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeIsRenderWidgetHostViewReady");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeIsShowingInterstitialPage(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeIsShowingInterstitialPage* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeIsShowingInterstitialPage*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeIsShowingInterstitialPage");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeOnHide(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeOnHide* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeOnHide*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeOnHide");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeOnShow(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeOnShow* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeOnShow*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeOnShow");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativePaste(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativePaste* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativePaste*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativePaste");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativePasteAsPlainText(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativePasteAsPlainText* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativePasteAsPlainText*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativePasteAsPlainText");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativePostMessageToFrame(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jstring arg4, jstring arg5, jstring arg6, jobjectArray arg7){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativePostMessageToFrame* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativePostMessageToFrame*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativePostMessageToFrame");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeReloadLoFiImages(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeReloadLoFiImages* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeReloadLoFiImages*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeReloadLoFiImages");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeReplace(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeReplace* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeReplace*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeReplace");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeReplaceTranslatedString(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeReplaceTranslatedString* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeReplaceTranslatedString*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeReplaceTranslatedString");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeRequestAccessibilitySnapshot(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeRequestAccessibilitySnapshot* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeRequestAccessibilitySnapshot*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeRequestAccessibilitySnapshot");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeRequestSmartClipExtract(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3, jint arg4, jint arg5, jint arg6, jint arg7){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeRequestSmartClipExtract* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeRequestSmartClipExtract*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeRequestSmartClipExtract");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeResumeLoadingCreatedWebContents(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeResumeLoadingCreatedWebContents* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeResumeLoadingCreatedWebContents*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeResumeLoadingCreatedWebContents");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSavePage(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jstring arg4, jint arg5){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSavePage* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSavePage*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSavePage");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeScrollFocusedEditableNodeIntoView(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeScrollFocusedEditableNodeIntoView* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeScrollFocusedEditableNodeIntoView*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeScrollFocusedEditableNodeIntoView");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSelectAll(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSelectAll* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSelectAll*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSelectAll");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSelectWordAroundCaret(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSelectWordAroundCaret* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSelectWordAroundCaret*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSelectWordAroundCaret");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSetAudioMuted(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSetAudioMuted* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSetAudioMuted*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSetAudioMuted");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSetHasPersistentVideo(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSetHasPersistentVideo* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSetHasPersistentVideo*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSetHasPersistentVideo");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSetImportance(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSetImportance* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSetImportance*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSetImportance");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSetOverscrollRefreshHandler(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSetOverscrollRefreshHandler* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSetOverscrollRefreshHandler*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSetOverscrollRefreshHandler");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSetSize(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSetSize* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSetSize*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSetSize");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSetTranslateMode(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSetTranslateMode* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSetTranslateMode*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSetTranslateMode");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeShowContextMenuAtTouchHandle(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeShowContextMenuAtTouchHandle* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeShowContextMenuAtTouchHandle*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeShowContextMenuAtTouchHandle");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeShowInterstitialPage(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jlong arg4){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeShowInterstitialPage* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeShowInterstitialPage*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeShowInterstitialPage");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeStop(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeStop* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeStop*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeStop");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSuspendAllMediaPlayers(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSuspendAllMediaPlayers* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSuspendAllMediaPlayers*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsImpl_nativeSuspendAllMediaPlayers");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_content_browser_webcontents_WebContentsObserverProxy_nativeDestroy(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsObserverProxy_nativeDestroy* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsObserverProxy_nativeDestroy*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsObserverProxy_nativeDestroy");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jlong JNICALL Java_org_chromium_content_browser_webcontents_WebContentsObserverProxy_nativeInit(JNIEnv* arg0, jobject arg1, jobject arg2){
	Origin_Java_org_chromium_content_browser_webcontents_WebContentsObserverProxy_nativeInit* TargetFunc = 
		(Origin_Java_org_chromium_content_browser_webcontents_WebContentsObserverProxy_nativeInit*)dlsym(Sohandle, "Java_org_chromium_content_browser_webcontents_WebContentsObserverProxy_nativeInit");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_device_bluetooth_ChromeBluetoothAdapter_nativeCreateOrUpdateDeviceOnScan(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jobject arg4, jint arg5, jobjectArray arg6, jint arg7, jobjectArray arg8, jobjectArray arg9, jintArray arg10, jobjectArray arg11){
	Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothAdapter_nativeCreateOrUpdateDeviceOnScan* TargetFunc = 
		(Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothAdapter_nativeCreateOrUpdateDeviceOnScan*)dlsym(Sohandle, "Java_org_chromium_device_bluetooth_ChromeBluetoothAdapter_nativeCreateOrUpdateDeviceOnScan");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
}
JNIEXPORT void JNICALL Java_org_chromium_device_bluetooth_ChromeBluetoothAdapter_nativeOnAdapterStateChanged(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothAdapter_nativeOnAdapterStateChanged* TargetFunc = 
		(Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothAdapter_nativeOnAdapterStateChanged*)dlsym(Sohandle, "Java_org_chromium_device_bluetooth_ChromeBluetoothAdapter_nativeOnAdapterStateChanged");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_device_bluetooth_ChromeBluetoothAdapter_nativeOnScanFailed(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothAdapter_nativeOnScanFailed* TargetFunc = 
		(Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothAdapter_nativeOnScanFailed*)dlsym(Sohandle, "Java_org_chromium_device_bluetooth_ChromeBluetoothAdapter_nativeOnScanFailed");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_device_bluetooth_ChromeBluetoothDevice_nativeCreateGattRemoteService(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jobject arg4){
	Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothDevice_nativeCreateGattRemoteService* TargetFunc = 
		(Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothDevice_nativeCreateGattRemoteService*)dlsym(Sohandle, "Java_org_chromium_device_bluetooth_ChromeBluetoothDevice_nativeCreateGattRemoteService");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_device_bluetooth_ChromeBluetoothDevice_nativeOnConnectionStateChange(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jboolean arg4){
	Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothDevice_nativeOnConnectionStateChange* TargetFunc = 
		(Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothDevice_nativeOnConnectionStateChange*)dlsym(Sohandle, "Java_org_chromium_device_bluetooth_ChromeBluetoothDevice_nativeOnConnectionStateChange");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_device_bluetooth_ChromeBluetoothDevice_nativeOnGattServicesDiscovered(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothDevice_nativeOnGattServicesDiscovered* TargetFunc = 
		(Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothDevice_nativeOnGattServicesDiscovered*)dlsym(Sohandle, "Java_org_chromium_device_bluetooth_ChromeBluetoothDevice_nativeOnGattServicesDiscovered");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_nativeCreateGattRemoteDescriptor(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jobject arg4, jobject arg5){
	Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_nativeCreateGattRemoteDescriptor* TargetFunc = 
		(Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_nativeCreateGattRemoteDescriptor*)dlsym(Sohandle, "Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_nativeCreateGattRemoteDescriptor");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT void JNICALL Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_nativeOnChanged(JNIEnv* arg0, jobject arg1, jlong arg2, jbyteArray arg3){
	Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_nativeOnChanged* TargetFunc = 
		(Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_nativeOnChanged*)dlsym(Sohandle, "Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_nativeOnChanged");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_nativeOnRead(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jbyteArray arg4){
	Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_nativeOnRead* TargetFunc = 
		(Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_nativeOnRead*)dlsym(Sohandle, "Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_nativeOnRead");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_nativeOnWrite(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_nativeOnWrite* TargetFunc = 
		(Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_nativeOnWrite*)dlsym(Sohandle, "Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_nativeOnWrite");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattDescriptor_nativeOnRead(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jbyteArray arg4){
	Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattDescriptor_nativeOnRead* TargetFunc = 
		(Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattDescriptor_nativeOnRead*)dlsym(Sohandle, "Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattDescriptor_nativeOnRead");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattDescriptor_nativeOnWrite(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattDescriptor_nativeOnWrite* TargetFunc = 
		(Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattDescriptor_nativeOnWrite*)dlsym(Sohandle, "Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattDescriptor_nativeOnWrite");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattService_nativeCreateGattRemoteCharacteristic(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jobject arg4, jobject arg5){
	Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattService_nativeCreateGattRemoteCharacteristic* TargetFunc = 
		(Origin_Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattService_nativeCreateGattRemoteCharacteristic*)dlsym(Sohandle, "Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattService_nativeCreateGattRemoteCharacteristic");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT void JNICALL Java_org_chromium_device_gamepad_GamepadList_nativeSetGamepadData(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jboolean arg4, jboolean arg5, jstring arg6, jlong arg7, jfloatArray arg8, jfloatArray arg9){
	Origin_Java_org_chromium_device_gamepad_GamepadList_nativeSetGamepadData* TargetFunc = 
		(Origin_Java_org_chromium_device_gamepad_GamepadList_nativeSetGamepadData*)dlsym(Sohandle, "Java_org_chromium_device_gamepad_GamepadList_nativeSetGamepadData");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
}
JNIEXPORT void JNICALL Java_org_chromium_device_geolocation_LocationProviderAdapter_nativeNewErrorAvailable(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_chromium_device_geolocation_LocationProviderAdapter_nativeNewErrorAvailable* TargetFunc = 
		(Origin_Java_org_chromium_device_geolocation_LocationProviderAdapter_nativeNewErrorAvailable*)dlsym(Sohandle, "Java_org_chromium_device_geolocation_LocationProviderAdapter_nativeNewErrorAvailable");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_device_geolocation_LocationProviderAdapter_nativeNewLocationAvailable(JNIEnv* arg0, jobject arg1, jdouble arg2, jdouble arg3, jdouble arg4, jboolean arg5, jdouble arg6, jboolean arg7, jdouble arg8, jboolean arg9, jdouble arg10, jboolean arg11, jdouble arg12){
	Origin_Java_org_chromium_device_geolocation_LocationProviderAdapter_nativeNewLocationAvailable* TargetFunc = 
		(Origin_Java_org_chromium_device_geolocation_LocationProviderAdapter_nativeNewLocationAvailable*)dlsym(Sohandle, "Java_org_chromium_device_geolocation_LocationProviderAdapter_nativeNewLocationAvailable");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12);
}
JNIEXPORT void JNICALL Java_org_chromium_device_sensors_PlatformSensor_nativeNotifyPlatformSensorError(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_device_sensors_PlatformSensor_nativeNotifyPlatformSensorError* TargetFunc = 
		(Origin_Java_org_chromium_device_sensors_PlatformSensor_nativeNotifyPlatformSensorError*)dlsym(Sohandle, "Java_org_chromium_device_sensors_PlatformSensor_nativeNotifyPlatformSensorError");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_device_sensors_PlatformSensor_nativeUpdatePlatformSensorReading(JNIEnv* arg0, jobject arg1, jlong arg2, jdouble arg3, jdouble arg4, jdouble arg5, jdouble arg6, jdouble arg7){
	Origin_Java_org_chromium_device_sensors_PlatformSensor_nativeUpdatePlatformSensorReading* TargetFunc = 
		(Origin_Java_org_chromium_device_sensors_PlatformSensor_nativeUpdatePlatformSensorReading*)dlsym(Sohandle, "Java_org_chromium_device_sensors_PlatformSensor_nativeUpdatePlatformSensorReading");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
}
JNIEXPORT void JNICALL Java_org_chromium_device_time_1zone_1monitor_TimeZoneMonitor_nativeTimeZoneChangedFromJava(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_device_time_1zone_1monitor_TimeZoneMonitor_nativeTimeZoneChangedFromJava* TargetFunc = 
		(Origin_Java_org_chromium_device_time_1zone_1monitor_TimeZoneMonitor_nativeTimeZoneChangedFromJava*)dlsym(Sohandle, "Java_org_chromium_device_time_1zone_1monitor_TimeZoneMonitor_nativeTimeZoneChangedFromJava");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_device_usb_ChromeUsbService_nativeDeviceAttached(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3){
	Origin_Java_org_chromium_device_usb_ChromeUsbService_nativeDeviceAttached* TargetFunc = 
		(Origin_Java_org_chromium_device_usb_ChromeUsbService_nativeDeviceAttached*)dlsym(Sohandle, "Java_org_chromium_device_usb_ChromeUsbService_nativeDeviceAttached");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_device_usb_ChromeUsbService_nativeDeviceDetached(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_device_usb_ChromeUsbService_nativeDeviceDetached* TargetFunc = 
		(Origin_Java_org_chromium_device_usb_ChromeUsbService_nativeDeviceDetached*)dlsym(Sohandle, "Java_org_chromium_device_usb_ChromeUsbService_nativeDeviceDetached");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_device_usb_ChromeUsbService_nativeDevicePermissionRequestComplete(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jboolean arg4){
	Origin_Java_org_chromium_device_usb_ChromeUsbService_nativeDevicePermissionRequestComplete* TargetFunc = 
		(Origin_Java_org_chromium_device_usb_ChromeUsbService_nativeDevicePermissionRequestComplete*)dlsym(Sohandle, "Java_org_chromium_device_usb_ChromeUsbService_nativeDevicePermissionRequestComplete");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_media_AudioManagerAndroid_nativeSetMute(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_chromium_media_AudioManagerAndroid_nativeSetMute* TargetFunc = 
		(Origin_Java_org_chromium_media_AudioManagerAndroid_nativeSetMute*)dlsym(Sohandle, "Java_org_chromium_media_AudioManagerAndroid_nativeSetMute");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_media_AudioRecordInput_nativeCacheDirectBufferAddress(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3){
	Origin_Java_org_chromium_media_AudioRecordInput_nativeCacheDirectBufferAddress* TargetFunc = 
		(Origin_Java_org_chromium_media_AudioRecordInput_nativeCacheDirectBufferAddress*)dlsym(Sohandle, "Java_org_chromium_media_AudioRecordInput_nativeCacheDirectBufferAddress");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_media_AudioRecordInput_nativeOnData(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4){
	Origin_Java_org_chromium_media_AudioRecordInput_nativeOnData* TargetFunc = 
		(Origin_Java_org_chromium_media_AudioRecordInput_nativeOnData*)dlsym(Sohandle, "Java_org_chromium_media_AudioRecordInput_nativeOnData");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT jlong JNICALL Java_org_chromium_media_AudioTrackOutputStream_nativeGetAddress(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3){
	Origin_Java_org_chromium_media_AudioTrackOutputStream_nativeGetAddress* TargetFunc = 
		(Origin_Java_org_chromium_media_AudioTrackOutputStream_nativeGetAddress*)dlsym(Sohandle, "Java_org_chromium_media_AudioTrackOutputStream_nativeGetAddress");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_media_AudioTrackOutputStream_nativeOnError(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_media_AudioTrackOutputStream_nativeOnError* TargetFunc = 
		(Origin_Java_org_chromium_media_AudioTrackOutputStream_nativeOnError*)dlsym(Sohandle, "Java_org_chromium_media_AudioTrackOutputStream_nativeOnError");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jobject JNICALL Java_org_chromium_media_AudioTrackOutputStream_nativeOnMoreData(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3, jlong arg4){
	Origin_Java_org_chromium_media_AudioTrackOutputStream_nativeOnMoreData* TargetFunc = 
		(Origin_Java_org_chromium_media_AudioTrackOutputStream_nativeOnMoreData*)dlsym(Sohandle, "Java_org_chromium_media_AudioTrackOutputStream_nativeOnMoreData");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT jint JNICALL Java_org_chromium_media_HdrMetadata_nativeColorTransfer(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_media_HdrMetadata_nativeColorTransfer* TargetFunc = 
		(Origin_Java_org_chromium_media_HdrMetadata_nativeColorTransfer*)dlsym(Sohandle, "Java_org_chromium_media_HdrMetadata_nativeColorTransfer");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jint JNICALL Java_org_chromium_media_HdrMetadata_nativeMaxContentLuminance(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_media_HdrMetadata_nativeMaxContentLuminance* TargetFunc = 
		(Origin_Java_org_chromium_media_HdrMetadata_nativeMaxContentLuminance*)dlsym(Sohandle, "Java_org_chromium_media_HdrMetadata_nativeMaxContentLuminance");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jint JNICALL Java_org_chromium_media_HdrMetadata_nativeMaxFrameAverageLuminance(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_media_HdrMetadata_nativeMaxFrameAverageLuminance* TargetFunc = 
		(Origin_Java_org_chromium_media_HdrMetadata_nativeMaxFrameAverageLuminance*)dlsym(Sohandle, "Java_org_chromium_media_HdrMetadata_nativeMaxFrameAverageLuminance");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jfloat JNICALL Java_org_chromium_media_HdrMetadata_nativeMaxMasteringLuminance(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_media_HdrMetadata_nativeMaxMasteringLuminance* TargetFunc = 
		(Origin_Java_org_chromium_media_HdrMetadata_nativeMaxMasteringLuminance*)dlsym(Sohandle, "Java_org_chromium_media_HdrMetadata_nativeMaxMasteringLuminance");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jfloat JNICALL Java_org_chromium_media_HdrMetadata_nativeMinMasteringLuminance(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_media_HdrMetadata_nativeMinMasteringLuminance* TargetFunc = 
		(Origin_Java_org_chromium_media_HdrMetadata_nativeMinMasteringLuminance*)dlsym(Sohandle, "Java_org_chromium_media_HdrMetadata_nativeMinMasteringLuminance");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jint JNICALL Java_org_chromium_media_HdrMetadata_nativePrimaries(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_media_HdrMetadata_nativePrimaries* TargetFunc = 
		(Origin_Java_org_chromium_media_HdrMetadata_nativePrimaries*)dlsym(Sohandle, "Java_org_chromium_media_HdrMetadata_nativePrimaries");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jfloat JNICALL Java_org_chromium_media_HdrMetadata_nativePrimaryBChromaticityX(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_media_HdrMetadata_nativePrimaryBChromaticityX* TargetFunc = 
		(Origin_Java_org_chromium_media_HdrMetadata_nativePrimaryBChromaticityX*)dlsym(Sohandle, "Java_org_chromium_media_HdrMetadata_nativePrimaryBChromaticityX");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jfloat JNICALL Java_org_chromium_media_HdrMetadata_nativePrimaryBChromaticityY(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_media_HdrMetadata_nativePrimaryBChromaticityY* TargetFunc = 
		(Origin_Java_org_chromium_media_HdrMetadata_nativePrimaryBChromaticityY*)dlsym(Sohandle, "Java_org_chromium_media_HdrMetadata_nativePrimaryBChromaticityY");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jfloat JNICALL Java_org_chromium_media_HdrMetadata_nativePrimaryGChromaticityX(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_media_HdrMetadata_nativePrimaryGChromaticityX* TargetFunc = 
		(Origin_Java_org_chromium_media_HdrMetadata_nativePrimaryGChromaticityX*)dlsym(Sohandle, "Java_org_chromium_media_HdrMetadata_nativePrimaryGChromaticityX");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jfloat JNICALL Java_org_chromium_media_HdrMetadata_nativePrimaryGChromaticityY(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_media_HdrMetadata_nativePrimaryGChromaticityY* TargetFunc = 
		(Origin_Java_org_chromium_media_HdrMetadata_nativePrimaryGChromaticityY*)dlsym(Sohandle, "Java_org_chromium_media_HdrMetadata_nativePrimaryGChromaticityY");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jfloat JNICALL Java_org_chromium_media_HdrMetadata_nativePrimaryRChromaticityX(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_media_HdrMetadata_nativePrimaryRChromaticityX* TargetFunc = 
		(Origin_Java_org_chromium_media_HdrMetadata_nativePrimaryRChromaticityX*)dlsym(Sohandle, "Java_org_chromium_media_HdrMetadata_nativePrimaryRChromaticityX");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jfloat JNICALL Java_org_chromium_media_HdrMetadata_nativePrimaryRChromaticityY(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_media_HdrMetadata_nativePrimaryRChromaticityY* TargetFunc = 
		(Origin_Java_org_chromium_media_HdrMetadata_nativePrimaryRChromaticityY*)dlsym(Sohandle, "Java_org_chromium_media_HdrMetadata_nativePrimaryRChromaticityY");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jint JNICALL Java_org_chromium_media_HdrMetadata_nativeRange(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_media_HdrMetadata_nativeRange* TargetFunc = 
		(Origin_Java_org_chromium_media_HdrMetadata_nativeRange*)dlsym(Sohandle, "Java_org_chromium_media_HdrMetadata_nativeRange");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jfloat JNICALL Java_org_chromium_media_HdrMetadata_nativeWhitePointChromaticityX(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_media_HdrMetadata_nativeWhitePointChromaticityX* TargetFunc = 
		(Origin_Java_org_chromium_media_HdrMetadata_nativeWhitePointChromaticityX*)dlsym(Sohandle, "Java_org_chromium_media_HdrMetadata_nativeWhitePointChromaticityX");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jfloat JNICALL Java_org_chromium_media_HdrMetadata_nativeWhitePointChromaticityY(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_media_HdrMetadata_nativeWhitePointChromaticityY* TargetFunc = 
		(Origin_Java_org_chromium_media_HdrMetadata_nativeWhitePointChromaticityY*)dlsym(Sohandle, "Java_org_chromium_media_HdrMetadata_nativeWhitePointChromaticityY");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_media_MediaDrmBridge_nativeOnMediaCryptoReady(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3){
	Origin_Java_org_chromium_media_MediaDrmBridge_nativeOnMediaCryptoReady* TargetFunc = 
		(Origin_Java_org_chromium_media_MediaDrmBridge_nativeOnMediaCryptoReady*)dlsym(Sohandle, "Java_org_chromium_media_MediaDrmBridge_nativeOnMediaCryptoReady");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_media_MediaDrmBridge_nativeOnPromiseRejected(JNIEnv* arg0, jobject arg1, jlong arg2, jlong arg3, jstring arg4){
	Origin_Java_org_chromium_media_MediaDrmBridge_nativeOnPromiseRejected* TargetFunc = 
		(Origin_Java_org_chromium_media_MediaDrmBridge_nativeOnPromiseRejected*)dlsym(Sohandle, "Java_org_chromium_media_MediaDrmBridge_nativeOnPromiseRejected");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_media_MediaDrmBridge_nativeOnPromiseResolved(JNIEnv* arg0, jobject arg1, jlong arg2, jlong arg3){
	Origin_Java_org_chromium_media_MediaDrmBridge_nativeOnPromiseResolved* TargetFunc = 
		(Origin_Java_org_chromium_media_MediaDrmBridge_nativeOnPromiseResolved*)dlsym(Sohandle, "Java_org_chromium_media_MediaDrmBridge_nativeOnPromiseResolved");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_media_MediaDrmBridge_nativeOnPromiseResolvedWithSession(JNIEnv* arg0, jobject arg1, jlong arg2, jlong arg3, jbyteArray arg4){
	Origin_Java_org_chromium_media_MediaDrmBridge_nativeOnPromiseResolvedWithSession* TargetFunc = 
		(Origin_Java_org_chromium_media_MediaDrmBridge_nativeOnPromiseResolvedWithSession*)dlsym(Sohandle, "Java_org_chromium_media_MediaDrmBridge_nativeOnPromiseResolvedWithSession");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_media_MediaDrmBridge_nativeOnResetDeviceCredentialsCompleted(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_chromium_media_MediaDrmBridge_nativeOnResetDeviceCredentialsCompleted* TargetFunc = 
		(Origin_Java_org_chromium_media_MediaDrmBridge_nativeOnResetDeviceCredentialsCompleted*)dlsym(Sohandle, "Java_org_chromium_media_MediaDrmBridge_nativeOnResetDeviceCredentialsCompleted");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_media_MediaDrmBridge_nativeOnSessionClosed(JNIEnv* arg0, jobject arg1, jlong arg2, jbyteArray arg3){
	Origin_Java_org_chromium_media_MediaDrmBridge_nativeOnSessionClosed* TargetFunc = 
		(Origin_Java_org_chromium_media_MediaDrmBridge_nativeOnSessionClosed*)dlsym(Sohandle, "Java_org_chromium_media_MediaDrmBridge_nativeOnSessionClosed");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_media_MediaDrmBridge_nativeOnSessionExpirationUpdate(JNIEnv* arg0, jobject arg1, jlong arg2, jbyteArray arg3, jlong arg4){
	Origin_Java_org_chromium_media_MediaDrmBridge_nativeOnSessionExpirationUpdate* TargetFunc = 
		(Origin_Java_org_chromium_media_MediaDrmBridge_nativeOnSessionExpirationUpdate*)dlsym(Sohandle, "Java_org_chromium_media_MediaDrmBridge_nativeOnSessionExpirationUpdate");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_media_MediaDrmBridge_nativeOnSessionKeysChange(JNIEnv* arg0, jobject arg1, jlong arg2, jbyteArray arg3, jobjectArray arg4, jboolean arg5, jboolean arg6){
	Origin_Java_org_chromium_media_MediaDrmBridge_nativeOnSessionKeysChange* TargetFunc = 
		(Origin_Java_org_chromium_media_MediaDrmBridge_nativeOnSessionKeysChange*)dlsym(Sohandle, "Java_org_chromium_media_MediaDrmBridge_nativeOnSessionKeysChange");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
}
JNIEXPORT void JNICALL Java_org_chromium_media_MediaDrmBridge_nativeOnSessionMessage(JNIEnv* arg0, jobject arg1, jlong arg2, jbyteArray arg3, jint arg4, jbyteArray arg5){
	Origin_Java_org_chromium_media_MediaDrmBridge_nativeOnSessionMessage* TargetFunc = 
		(Origin_Java_org_chromium_media_MediaDrmBridge_nativeOnSessionMessage*)dlsym(Sohandle, "Java_org_chromium_media_MediaDrmBridge_nativeOnSessionMessage");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT void JNICALL Java_org_chromium_media_MediaDrmBridge_nativeOnStartProvisioning(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jbyteArray arg4){
	Origin_Java_org_chromium_media_MediaDrmBridge_nativeOnStartProvisioning* TargetFunc = 
		(Origin_Java_org_chromium_media_MediaDrmBridge_nativeOnStartProvisioning*)dlsym(Sohandle, "Java_org_chromium_media_MediaDrmBridge_nativeOnStartProvisioning");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_media_MediaDrmStorageBridge_nativeOnClearInfo(JNIEnv* arg0, jobject arg1, jlong arg2, jbyteArray arg3, jobject arg4){
	Origin_Java_org_chromium_media_MediaDrmStorageBridge_nativeOnClearInfo* TargetFunc = 
		(Origin_Java_org_chromium_media_MediaDrmStorageBridge_nativeOnClearInfo*)dlsym(Sohandle, "Java_org_chromium_media_MediaDrmStorageBridge_nativeOnClearInfo");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_media_MediaDrmStorageBridge_nativeOnLoadInfo(JNIEnv* arg0, jobject arg1, jlong arg2, jbyteArray arg3, jobject arg4){
	Origin_Java_org_chromium_media_MediaDrmStorageBridge_nativeOnLoadInfo* TargetFunc = 
		(Origin_Java_org_chromium_media_MediaDrmStorageBridge_nativeOnLoadInfo*)dlsym(Sohandle, "Java_org_chromium_media_MediaDrmStorageBridge_nativeOnLoadInfo");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_media_MediaDrmStorageBridge_nativeOnProvisioned(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3){
	Origin_Java_org_chromium_media_MediaDrmStorageBridge_nativeOnProvisioned* TargetFunc = 
		(Origin_Java_org_chromium_media_MediaDrmStorageBridge_nativeOnProvisioned*)dlsym(Sohandle, "Java_org_chromium_media_MediaDrmStorageBridge_nativeOnProvisioned");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_media_MediaDrmStorageBridge_nativeOnSaveInfo(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3, jobject arg4){
	Origin_Java_org_chromium_media_MediaDrmStorageBridge_nativeOnSaveInfo* TargetFunc = 
		(Origin_Java_org_chromium_media_MediaDrmStorageBridge_nativeOnSaveInfo*)dlsym(Sohandle, "Java_org_chromium_media_MediaDrmStorageBridge_nativeOnSaveInfo");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_media_MediaPlayerBridge_nativeOnDidSetDataUriDataSource(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_chromium_media_MediaPlayerBridge_nativeOnDidSetDataUriDataSource* TargetFunc = 
		(Origin_Java_org_chromium_media_MediaPlayerBridge_nativeOnDidSetDataUriDataSource*)dlsym(Sohandle, "Java_org_chromium_media_MediaPlayerBridge_nativeOnDidSetDataUriDataSource");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_media_MediaPlayerListener_nativeOnBufferingUpdate(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_media_MediaPlayerListener_nativeOnBufferingUpdate* TargetFunc = 
		(Origin_Java_org_chromium_media_MediaPlayerListener_nativeOnBufferingUpdate*)dlsym(Sohandle, "Java_org_chromium_media_MediaPlayerListener_nativeOnBufferingUpdate");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_media_MediaPlayerListener_nativeOnMediaError(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_media_MediaPlayerListener_nativeOnMediaError* TargetFunc = 
		(Origin_Java_org_chromium_media_MediaPlayerListener_nativeOnMediaError*)dlsym(Sohandle, "Java_org_chromium_media_MediaPlayerListener_nativeOnMediaError");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_media_MediaPlayerListener_nativeOnMediaInterrupted(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_media_MediaPlayerListener_nativeOnMediaInterrupted* TargetFunc = 
		(Origin_Java_org_chromium_media_MediaPlayerListener_nativeOnMediaInterrupted*)dlsym(Sohandle, "Java_org_chromium_media_MediaPlayerListener_nativeOnMediaInterrupted");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_media_MediaPlayerListener_nativeOnMediaPrepared(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_media_MediaPlayerListener_nativeOnMediaPrepared* TargetFunc = 
		(Origin_Java_org_chromium_media_MediaPlayerListener_nativeOnMediaPrepared*)dlsym(Sohandle, "Java_org_chromium_media_MediaPlayerListener_nativeOnMediaPrepared");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_media_MediaPlayerListener_nativeOnPlaybackComplete(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_media_MediaPlayerListener_nativeOnPlaybackComplete* TargetFunc = 
		(Origin_Java_org_chromium_media_MediaPlayerListener_nativeOnPlaybackComplete*)dlsym(Sohandle, "Java_org_chromium_media_MediaPlayerListener_nativeOnPlaybackComplete");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_media_MediaPlayerListener_nativeOnSeekComplete(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_media_MediaPlayerListener_nativeOnSeekComplete* TargetFunc = 
		(Origin_Java_org_chromium_media_MediaPlayerListener_nativeOnSeekComplete*)dlsym(Sohandle, "Java_org_chromium_media_MediaPlayerListener_nativeOnSeekComplete");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_media_MediaPlayerListener_nativeOnVideoSizeChanged(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4){
	Origin_Java_org_chromium_media_MediaPlayerListener_nativeOnVideoSizeChanged* TargetFunc = 
		(Origin_Java_org_chromium_media_MediaPlayerListener_nativeOnVideoSizeChanged*)dlsym(Sohandle, "Java_org_chromium_media_MediaPlayerListener_nativeOnVideoSizeChanged");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_media_MediaServerCrashListener_nativeOnMediaServerCrashDetected(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_chromium_media_MediaServerCrashListener_nativeOnMediaServerCrashDetected* TargetFunc = 
		(Origin_Java_org_chromium_media_MediaServerCrashListener_nativeOnMediaServerCrashDetected*)dlsym(Sohandle, "Java_org_chromium_media_MediaServerCrashListener_nativeOnMediaServerCrashDetected");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_media_ScreenCapture_nativeOnActivityResult(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_chromium_media_ScreenCapture_nativeOnActivityResult* TargetFunc = 
		(Origin_Java_org_chromium_media_ScreenCapture_nativeOnActivityResult*)dlsym(Sohandle, "Java_org_chromium_media_ScreenCapture_nativeOnActivityResult");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_media_ScreenCapture_nativeOnI420FrameAvailable(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3, jint arg4, jobject arg5, jobject arg6, jint arg7, jint arg8, jint arg9, jint arg10, jint arg11, jint arg12, jlong arg13){
	Origin_Java_org_chromium_media_ScreenCapture_nativeOnI420FrameAvailable* TargetFunc = 
		(Origin_Java_org_chromium_media_ScreenCapture_nativeOnI420FrameAvailable*)dlsym(Sohandle, "Java_org_chromium_media_ScreenCapture_nativeOnI420FrameAvailable");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13);
}
JNIEXPORT void JNICALL Java_org_chromium_media_ScreenCapture_nativeOnOrientationChange(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_media_ScreenCapture_nativeOnOrientationChange* TargetFunc = 
		(Origin_Java_org_chromium_media_ScreenCapture_nativeOnOrientationChange*)dlsym(Sohandle, "Java_org_chromium_media_ScreenCapture_nativeOnOrientationChange");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_media_ScreenCapture_nativeOnRGBAFrameAvailable(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3, jint arg4, jint arg5, jint arg6, jint arg7, jint arg8, jlong arg9){
	Origin_Java_org_chromium_media_ScreenCapture_nativeOnRGBAFrameAvailable* TargetFunc = 
		(Origin_Java_org_chromium_media_ScreenCapture_nativeOnRGBAFrameAvailable*)dlsym(Sohandle, "Java_org_chromium_media_ScreenCapture_nativeOnRGBAFrameAvailable");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
}
JNIEXPORT void JNICALL Java_org_chromium_media_VideoCapture_nativeOnError(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3){
	Origin_Java_org_chromium_media_VideoCapture_nativeOnError* TargetFunc = 
		(Origin_Java_org_chromium_media_VideoCapture_nativeOnError*)dlsym(Sohandle, "Java_org_chromium_media_VideoCapture_nativeOnError");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_media_VideoCapture_nativeOnFrameAvailable(JNIEnv* arg0, jobject arg1, jlong arg2, jbyteArray arg3, jint arg4, jint arg5){
	Origin_Java_org_chromium_media_VideoCapture_nativeOnFrameAvailable* TargetFunc = 
		(Origin_Java_org_chromium_media_VideoCapture_nativeOnFrameAvailable*)dlsym(Sohandle, "Java_org_chromium_media_VideoCapture_nativeOnFrameAvailable");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT void JNICALL Java_org_chromium_media_VideoCapture_nativeOnI420FrameAvailable(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3, jint arg4, jobject arg5, jobject arg6, jint arg7, jint arg8, jint arg9, jint arg10, jint arg11, jlong arg12){
	Origin_Java_org_chromium_media_VideoCapture_nativeOnI420FrameAvailable* TargetFunc = 
		(Origin_Java_org_chromium_media_VideoCapture_nativeOnI420FrameAvailable*)dlsym(Sohandle, "Java_org_chromium_media_VideoCapture_nativeOnI420FrameAvailable");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12);
}
JNIEXPORT void JNICALL Java_org_chromium_media_VideoCapture_nativeOnPhotoTaken(JNIEnv* arg0, jobject arg1, jlong arg2, jlong arg3, jbyteArray arg4){
	Origin_Java_org_chromium_media_VideoCapture_nativeOnPhotoTaken* TargetFunc = 
		(Origin_Java_org_chromium_media_VideoCapture_nativeOnPhotoTaken*)dlsym(Sohandle, "Java_org_chromium_media_VideoCapture_nativeOnPhotoTaken");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_media_VideoCapture_nativeOnStarted(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_media_VideoCapture_nativeOnStarted* TargetFunc = 
		(Origin_Java_org_chromium_media_VideoCapture_nativeOnStarted*)dlsym(Sohandle, "Java_org_chromium_media_VideoCapture_nativeOnStarted");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_midi_MidiInputPortAndroid_nativeOnData(JNIEnv* arg0, jobject arg1, jlong arg2, jbyteArray arg3, jint arg4, jint arg5, jlong arg6){
	Origin_Java_org_chromium_midi_MidiInputPortAndroid_nativeOnData* TargetFunc = 
		(Origin_Java_org_chromium_midi_MidiInputPortAndroid_nativeOnData*)dlsym(Sohandle, "Java_org_chromium_midi_MidiInputPortAndroid_nativeOnData");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
}
JNIEXPORT void JNICALL Java_org_chromium_midi_MidiManagerAndroid_nativeOnAttached(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3){
	Origin_Java_org_chromium_midi_MidiManagerAndroid_nativeOnAttached* TargetFunc = 
		(Origin_Java_org_chromium_midi_MidiManagerAndroid_nativeOnAttached*)dlsym(Sohandle, "Java_org_chromium_midi_MidiManagerAndroid_nativeOnAttached");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_midi_MidiManagerAndroid_nativeOnDetached(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3){
	Origin_Java_org_chromium_midi_MidiManagerAndroid_nativeOnDetached* TargetFunc = 
		(Origin_Java_org_chromium_midi_MidiManagerAndroid_nativeOnDetached*)dlsym(Sohandle, "Java_org_chromium_midi_MidiManagerAndroid_nativeOnDetached");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_midi_MidiManagerAndroid_nativeOnInitializationFailed(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_midi_MidiManagerAndroid_nativeOnInitializationFailed* TargetFunc = 
		(Origin_Java_org_chromium_midi_MidiManagerAndroid_nativeOnInitializationFailed*)dlsym(Sohandle, "Java_org_chromium_midi_MidiManagerAndroid_nativeOnInitializationFailed");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_midi_MidiManagerAndroid_nativeOnInitialized(JNIEnv* arg0, jobject arg1, jlong arg2, jobjectArray arg3){
	Origin_Java_org_chromium_midi_MidiManagerAndroid_nativeOnInitialized* TargetFunc = 
		(Origin_Java_org_chromium_midi_MidiManagerAndroid_nativeOnInitialized*)dlsym(Sohandle, "Java_org_chromium_midi_MidiManagerAndroid_nativeOnInitialized");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_midi_UsbMidiDeviceAndroid_nativeOnData(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jbyteArray arg4){
	Origin_Java_org_chromium_midi_UsbMidiDeviceAndroid_nativeOnData* TargetFunc = 
		(Origin_Java_org_chromium_midi_UsbMidiDeviceAndroid_nativeOnData*)dlsym(Sohandle, "Java_org_chromium_midi_UsbMidiDeviceAndroid_nativeOnData");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_midi_UsbMidiDeviceFactoryAndroid_nativeOnUsbMidiDeviceAttached(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3){
	Origin_Java_org_chromium_midi_UsbMidiDeviceFactoryAndroid_nativeOnUsbMidiDeviceAttached* TargetFunc = 
		(Origin_Java_org_chromium_midi_UsbMidiDeviceFactoryAndroid_nativeOnUsbMidiDeviceAttached*)dlsym(Sohandle, "Java_org_chromium_midi_UsbMidiDeviceFactoryAndroid_nativeOnUsbMidiDeviceAttached");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_midi_UsbMidiDeviceFactoryAndroid_nativeOnUsbMidiDeviceDetached(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_midi_UsbMidiDeviceFactoryAndroid_nativeOnUsbMidiDeviceDetached* TargetFunc = 
		(Origin_Java_org_chromium_midi_UsbMidiDeviceFactoryAndroid_nativeOnUsbMidiDeviceDetached*)dlsym(Sohandle, "Java_org_chromium_midi_UsbMidiDeviceFactoryAndroid_nativeOnUsbMidiDeviceDetached");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_midi_UsbMidiDeviceFactoryAndroid_nativeOnUsbMidiDeviceRequestDone(JNIEnv* arg0, jobject arg1, jlong arg2, jobjectArray arg3){
	Origin_Java_org_chromium_midi_UsbMidiDeviceFactoryAndroid_nativeOnUsbMidiDeviceRequestDone* TargetFunc = 
		(Origin_Java_org_chromium_midi_UsbMidiDeviceFactoryAndroid_nativeOnUsbMidiDeviceRequestDone*)dlsym(Sohandle, "Java_org_chromium_midi_UsbMidiDeviceFactoryAndroid_nativeOnUsbMidiDeviceRequestDone");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jlong JNICALL Java_org_chromium_mojo_system_impl_BaseRunLoop_nativeCreateBaseRunLoop(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_mojo_system_impl_BaseRunLoop_nativeCreateBaseRunLoop* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_BaseRunLoop_nativeCreateBaseRunLoop*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_BaseRunLoop_nativeCreateBaseRunLoop");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_chromium_mojo_system_impl_BaseRunLoop_nativeDeleteMessageLoop(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_mojo_system_impl_BaseRunLoop_nativeDeleteMessageLoop* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_BaseRunLoop_nativeDeleteMessageLoop*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_BaseRunLoop_nativeDeleteMessageLoop");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_mojo_system_impl_BaseRunLoop_nativePostDelayedTask(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3, jlong arg4){
	Origin_Java_org_chromium_mojo_system_impl_BaseRunLoop_nativePostDelayedTask* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_BaseRunLoop_nativePostDelayedTask*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_BaseRunLoop_nativePostDelayedTask");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_mojo_system_impl_BaseRunLoop_nativeQuit(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_mojo_system_impl_BaseRunLoop_nativeQuit* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_BaseRunLoop_nativeQuit*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_BaseRunLoop_nativeQuit");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_chromium_mojo_system_impl_BaseRunLoop_nativeRun(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_mojo_system_impl_BaseRunLoop_nativeRun* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_BaseRunLoop_nativeRun*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_BaseRunLoop_nativeRun");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_chromium_mojo_system_impl_BaseRunLoop_nativeRunUntilIdle(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_mojo_system_impl_BaseRunLoop_nativeRunUntilIdle* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_BaseRunLoop_nativeRunUntilIdle*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_BaseRunLoop_nativeRunUntilIdle");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT jobject JNICALL Java_org_chromium_mojo_system_impl_CoreImpl_nativeBeginReadData(JNIEnv* arg0, jobject arg1, jint arg2, jint arg3, jint arg4){
	Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeBeginReadData* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeBeginReadData*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_CoreImpl_nativeBeginReadData");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT jobject JNICALL Java_org_chromium_mojo_system_impl_CoreImpl_nativeBeginWriteData(JNIEnv* arg0, jobject arg1, jint arg2, jint arg3, jint arg4){
	Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeBeginWriteData* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeBeginWriteData*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_CoreImpl_nativeBeginWriteData");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT jint JNICALL Java_org_chromium_mojo_system_impl_CoreImpl_nativeClose(JNIEnv* arg0, jobject arg1, jint arg2){
	Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeClose* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeClose*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_CoreImpl_nativeClose");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jobject JNICALL Java_org_chromium_mojo_system_impl_CoreImpl_nativeCreateDataPipe(JNIEnv* arg0, jobject arg1, jobject arg2){
	Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeCreateDataPipe* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeCreateDataPipe*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_CoreImpl_nativeCreateDataPipe");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jobject JNICALL Java_org_chromium_mojo_system_impl_CoreImpl_nativeCreateMessagePipe(JNIEnv* arg0, jobject arg1, jobject arg2){
	Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeCreateMessagePipe* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeCreateMessagePipe*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_CoreImpl_nativeCreateMessagePipe");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jobject JNICALL Java_org_chromium_mojo_system_impl_CoreImpl_nativeCreateSharedBuffer(JNIEnv* arg0, jobject arg1, jobject arg2, jlong arg3){
	Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeCreateSharedBuffer* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeCreateSharedBuffer*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_CoreImpl_nativeCreateSharedBuffer");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jobject JNICALL Java_org_chromium_mojo_system_impl_CoreImpl_nativeDuplicate(JNIEnv* arg0, jobject arg1, jint arg2, jobject arg3){
	Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeDuplicate* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeDuplicate*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_CoreImpl_nativeDuplicate");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jint JNICALL Java_org_chromium_mojo_system_impl_CoreImpl_nativeEndReadData(JNIEnv* arg0, jobject arg1, jint arg2, jint arg3){
	Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeEndReadData* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeEndReadData*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_CoreImpl_nativeEndReadData");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jint JNICALL Java_org_chromium_mojo_system_impl_CoreImpl_nativeEndWriteData(JNIEnv* arg0, jobject arg1, jint arg2, jint arg3){
	Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeEndWriteData* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeEndWriteData*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_CoreImpl_nativeEndWriteData");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jint JNICALL Java_org_chromium_mojo_system_impl_CoreImpl_nativeGetNativeBufferOffset(JNIEnv* arg0, jobject arg1, jobject arg2, jint arg3){
	Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeGetNativeBufferOffset* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeGetNativeBufferOffset*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_CoreImpl_nativeGetNativeBufferOffset");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jlong JNICALL Java_org_chromium_mojo_system_impl_CoreImpl_nativeGetTimeTicksNow(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeGetTimeTicksNow* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeGetTimeTicksNow*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_CoreImpl_nativeGetTimeTicksNow");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT jobject JNICALL Java_org_chromium_mojo_system_impl_CoreImpl_nativeMap(JNIEnv* arg0, jobject arg1, jint arg2, jlong arg3, jlong arg4, jint arg5){
	Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeMap* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeMap*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_CoreImpl_nativeMap");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT jint JNICALL Java_org_chromium_mojo_system_impl_CoreImpl_nativeQueryHandleSignalsState(JNIEnv* arg0, jobject arg1, jint arg2, jobject arg3){
	Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeQueryHandleSignalsState* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeQueryHandleSignalsState*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_CoreImpl_nativeQueryHandleSignalsState");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jobject JNICALL Java_org_chromium_mojo_system_impl_CoreImpl_nativeReadData(JNIEnv* arg0, jobject arg1, jint arg2, jobject arg3, jint arg4, jint arg5){
	Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeReadData* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeReadData*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_CoreImpl_nativeReadData");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT jobject JNICALL Java_org_chromium_mojo_system_impl_CoreImpl_nativeReadMessage(JNIEnv* arg0, jobject arg1, jint arg2, jint arg3){
	Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeReadMessage* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeReadMessage*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_CoreImpl_nativeReadMessage");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jint JNICALL Java_org_chromium_mojo_system_impl_CoreImpl_nativeUnmap(JNIEnv* arg0, jobject arg1, jobject arg2){
	Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeUnmap* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeUnmap*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_CoreImpl_nativeUnmap");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jobject JNICALL Java_org_chromium_mojo_system_impl_CoreImpl_nativeWriteData(JNIEnv* arg0, jobject arg1, jint arg2, jobject arg3, jint arg4, jint arg5){
	Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeWriteData* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeWriteData*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_CoreImpl_nativeWriteData");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT jint JNICALL Java_org_chromium_mojo_system_impl_CoreImpl_nativeWriteMessage(JNIEnv* arg0, jobject arg1, jint arg2, jobject arg3, jint arg4, jobject arg5, jint arg6){
	Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeWriteMessage* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_CoreImpl_nativeWriteMessage*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_CoreImpl_nativeWriteMessage");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
}
JNIEXPORT void JNICALL Java_org_chromium_mojo_system_impl_WatcherImpl_nativeCancel(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_mojo_system_impl_WatcherImpl_nativeCancel* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_WatcherImpl_nativeCancel*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_WatcherImpl_nativeCancel");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jlong JNICALL Java_org_chromium_mojo_system_impl_WatcherImpl_nativeCreateWatcher(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_mojo_system_impl_WatcherImpl_nativeCreateWatcher* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_WatcherImpl_nativeCreateWatcher*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_WatcherImpl_nativeCreateWatcher");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_chromium_mojo_system_impl_WatcherImpl_nativeDelete(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_mojo_system_impl_WatcherImpl_nativeDelete* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_WatcherImpl_nativeDelete*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_WatcherImpl_nativeDelete");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jint JNICALL Java_org_chromium_mojo_system_impl_WatcherImpl_nativeStart(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4){
	Origin_Java_org_chromium_mojo_system_impl_WatcherImpl_nativeStart* TargetFunc = 
		(Origin_Java_org_chromium_mojo_system_impl_WatcherImpl_nativeStart*)dlsym(Sohandle, "Java_org_chromium_mojo_system_impl_WatcherImpl_nativeStart");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT jstring JNICALL Java_org_chromium_net_GURLUtils_nativeGetOrigin(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_chromium_net_GURLUtils_nativeGetOrigin* TargetFunc = 
		(Origin_Java_org_chromium_net_GURLUtils_nativeGetOrigin*)dlsym(Sohandle, "Java_org_chromium_net_GURLUtils_nativeGetOrigin");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jstring JNICALL Java_org_chromium_net_GURLUtils_nativeGetScheme(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_chromium_net_GURLUtils_nativeGetScheme* TargetFunc = 
		(Origin_Java_org_chromium_net_GURLUtils_nativeGetScheme*)dlsym(Sohandle, "Java_org_chromium_net_GURLUtils_nativeGetScheme");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_net_HttpNegotiateAuthenticator_nativeSetResult(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jstring arg4){
	Origin_Java_org_chromium_net_HttpNegotiateAuthenticator_nativeSetResult* TargetFunc = 
		(Origin_Java_org_chromium_net_HttpNegotiateAuthenticator_nativeSetResult*)dlsym(Sohandle, "Java_org_chromium_net_HttpNegotiateAuthenticator_nativeSetResult");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyConnectionTypeChanged(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jlong arg4){
	Origin_Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyConnectionTypeChanged* TargetFunc = 
		(Origin_Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyConnectionTypeChanged*)dlsym(Sohandle, "Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyConnectionTypeChanged");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyMaxBandwidthChanged(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyMaxBandwidthChanged* TargetFunc = 
		(Origin_Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyMaxBandwidthChanged*)dlsym(Sohandle, "Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyMaxBandwidthChanged");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyOfNetworkConnect(JNIEnv* arg0, jobject arg1, jlong arg2, jlong arg3, jint arg4){
	Origin_Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyOfNetworkConnect* TargetFunc = 
		(Origin_Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyOfNetworkConnect*)dlsym(Sohandle, "Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyOfNetworkConnect");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyOfNetworkDisconnect(JNIEnv* arg0, jobject arg1, jlong arg2, jlong arg3){
	Origin_Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyOfNetworkDisconnect* TargetFunc = 
		(Origin_Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyOfNetworkDisconnect*)dlsym(Sohandle, "Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyOfNetworkDisconnect");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyOfNetworkSoonToDisconnect(JNIEnv* arg0, jobject arg1, jlong arg2, jlong arg3){
	Origin_Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyOfNetworkSoonToDisconnect* TargetFunc = 
		(Origin_Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyOfNetworkSoonToDisconnect*)dlsym(Sohandle, "Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyOfNetworkSoonToDisconnect");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyPurgeActiveNetworkList(JNIEnv* arg0, jobject arg1, jlong arg2, jlongArray arg3){
	Origin_Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyPurgeActiveNetworkList* TargetFunc = 
		(Origin_Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyPurgeActiveNetworkList*)dlsym(Sohandle, "Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyPurgeActiveNetworkList");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_net_ProxyChangeListener_nativeProxySettingsChanged(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_net_ProxyChangeListener_nativeProxySettingsChanged* TargetFunc = 
		(Origin_Java_org_chromium_net_ProxyChangeListener_nativeProxySettingsChanged*)dlsym(Sohandle, "Java_org_chromium_net_ProxyChangeListener_nativeProxySettingsChanged");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_net_ProxyChangeListener_nativeProxySettingsChangedTo(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jint arg4, jstring arg5, jobjectArray arg6){
	Origin_Java_org_chromium_net_ProxyChangeListener_nativeProxySettingsChangedTo* TargetFunc = 
		(Origin_Java_org_chromium_net_ProxyChangeListener_nativeProxySettingsChangedTo*)dlsym(Sohandle, "Java_org_chromium_net_ProxyChangeListener_nativeProxySettingsChangedTo");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
}
JNIEXPORT void JNICALL Java_org_chromium_net_X509Util_nativeNotifyKeyChainChanged(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_net_X509Util_nativeNotifyKeyChainChanged* TargetFunc = 
		(Origin_Java_org_chromium_net_X509Util_nativeNotifyKeyChainChanged*)dlsym(Sohandle, "Java_org_chromium_net_X509Util_nativeNotifyKeyChainChanged");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_chromium_policy_CombinedPolicyProvider_nativeFlushPolicies(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_policy_CombinedPolicyProvider_nativeFlushPolicies* TargetFunc = 
		(Origin_Java_org_chromium_policy_CombinedPolicyProvider_nativeFlushPolicies*)dlsym(Sohandle, "Java_org_chromium_policy_CombinedPolicyProvider_nativeFlushPolicies");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_policy_PolicyConverter_nativeSetPolicyBoolean(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jboolean arg4){
	Origin_Java_org_chromium_policy_PolicyConverter_nativeSetPolicyBoolean* TargetFunc = 
		(Origin_Java_org_chromium_policy_PolicyConverter_nativeSetPolicyBoolean*)dlsym(Sohandle, "Java_org_chromium_policy_PolicyConverter_nativeSetPolicyBoolean");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_policy_PolicyConverter_nativeSetPolicyInteger(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jint arg4){
	Origin_Java_org_chromium_policy_PolicyConverter_nativeSetPolicyInteger* TargetFunc = 
		(Origin_Java_org_chromium_policy_PolicyConverter_nativeSetPolicyInteger*)dlsym(Sohandle, "Java_org_chromium_policy_PolicyConverter_nativeSetPolicyInteger");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_policy_PolicyConverter_nativeSetPolicyString(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jstring arg4){
	Origin_Java_org_chromium_policy_PolicyConverter_nativeSetPolicyString* TargetFunc = 
		(Origin_Java_org_chromium_policy_PolicyConverter_nativeSetPolicyString*)dlsym(Sohandle, "Java_org_chromium_policy_PolicyConverter_nativeSetPolicyString");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_policy_PolicyConverter_nativeSetPolicyStringArray(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jobjectArray arg4){
	Origin_Java_org_chromium_policy_PolicyConverter_nativeSetPolicyStringArray* TargetFunc = 
		(Origin_Java_org_chromium_policy_PolicyConverter_nativeSetPolicyStringArray*)dlsym(Sohandle, "Java_org_chromium_policy_PolicyConverter_nativeSetPolicyStringArray");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT jlong JNICALL Java_org_chromium_ui_base_Clipboard_nativeInit(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_ui_base_Clipboard_nativeInit* TargetFunc = 
		(Origin_Java_org_chromium_ui_base_Clipboard_nativeInit*)dlsym(Sohandle, "Java_org_chromium_ui_base_Clipboard_nativeInit");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_base_Clipboard_nativeOnPrimaryClipChanged(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_ui_base_Clipboard_nativeOnPrimaryClipChanged* TargetFunc = 
		(Origin_Java_org_chromium_ui_base_Clipboard_nativeOnPrimaryClipChanged*)dlsym(Sohandle, "Java_org_chromium_ui_base_Clipboard_nativeOnPrimaryClipChanged");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_base_EventForwarder_nativeCancelFling(JNIEnv* arg0, jobject arg1, jlong arg2, jlong arg3){
	Origin_Java_org_chromium_ui_base_EventForwarder_nativeCancelFling* TargetFunc = 
		(Origin_Java_org_chromium_ui_base_EventForwarder_nativeCancelFling*)dlsym(Sohandle, "Java_org_chromium_ui_base_EventForwarder_nativeCancelFling");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_base_EventForwarder_nativeDoubleTap(JNIEnv* arg0, jobject arg1, jlong arg2, jlong arg3, jint arg4, jint arg5){
	Origin_Java_org_chromium_ui_base_EventForwarder_nativeDoubleTap* TargetFunc = 
		(Origin_Java_org_chromium_ui_base_EventForwarder_nativeDoubleTap*)dlsym(Sohandle, "Java_org_chromium_ui_base_EventForwarder_nativeDoubleTap");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT jobject JNICALL Java_org_chromium_ui_base_EventForwarder_nativeGetJavaWindowAndroid(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_ui_base_EventForwarder_nativeGetJavaWindowAndroid* TargetFunc = 
		(Origin_Java_org_chromium_ui_base_EventForwarder_nativeGetJavaWindowAndroid*)dlsym(Sohandle, "Java_org_chromium_ui_base_EventForwarder_nativeGetJavaWindowAndroid");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_base_EventForwarder_nativeOnDragEvent(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4, jint arg5, jint arg6, jint arg7, jobjectArray arg8, jstring arg9){
	Origin_Java_org_chromium_ui_base_EventForwarder_nativeOnDragEvent* TargetFunc = 
		(Origin_Java_org_chromium_ui_base_EventForwarder_nativeOnDragEvent*)dlsym(Sohandle, "Java_org_chromium_ui_base_EventForwarder_nativeOnDragEvent");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_ui_base_EventForwarder_nativeOnGestureEvent(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jlong arg4, jfloat arg5){
	Origin_Java_org_chromium_ui_base_EventForwarder_nativeOnGestureEvent* TargetFunc = 
		(Origin_Java_org_chromium_ui_base_EventForwarder_nativeOnGestureEvent*)dlsym(Sohandle, "Java_org_chromium_ui_base_EventForwarder_nativeOnGestureEvent");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_base_EventForwarder_nativeOnMouseEvent(JNIEnv* arg0, jobject arg1, jlong arg2, jlong arg3, jint arg4, jfloat arg5, jfloat arg6, jint arg7, jfloat arg8, jfloat arg9, jfloat arg10, jint arg11, jint arg12, jint arg13, jint arg14){
	Origin_Java_org_chromium_ui_base_EventForwarder_nativeOnMouseEvent* TargetFunc = 
		(Origin_Java_org_chromium_ui_base_EventForwarder_nativeOnMouseEvent*)dlsym(Sohandle, "Java_org_chromium_ui_base_EventForwarder_nativeOnMouseEvent");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_base_EventForwarder_nativeOnMouseWheelEvent(JNIEnv* arg0, jobject arg1, jlong arg2, jlong arg3, jfloat arg4, jfloat arg5, jfloat arg6, jfloat arg7){
	Origin_Java_org_chromium_ui_base_EventForwarder_nativeOnMouseWheelEvent* TargetFunc = 
		(Origin_Java_org_chromium_ui_base_EventForwarder_nativeOnMouseWheelEvent*)dlsym(Sohandle, "Java_org_chromium_ui_base_EventForwarder_nativeOnMouseWheelEvent");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
}
JNIEXPORT jboolean JNICALL Java_org_chromium_ui_base_EventForwarder_nativeOnTouchEvent(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3, jint arg4, jlong arg5, jint arg6, jint arg7, jint arg8, jint arg9, jfloat arg10, jfloat arg11, jfloat arg12, jfloat arg13, jint arg14, jint arg15, jfloat arg16, jfloat arg17, jfloat arg18, jfloat arg19, jfloat arg20, jfloat arg21, jfloat arg22, jfloat arg23, jfloat arg24, jfloat arg25, jint arg26, jint arg27, jint arg28, jint arg29, jboolean arg30){
	Origin_Java_org_chromium_ui_base_EventForwarder_nativeOnTouchEvent* TargetFunc = 
		(Origin_Java_org_chromium_ui_base_EventForwarder_nativeOnTouchEvent*)dlsym(Sohandle, "Java_org_chromium_ui_base_EventForwarder_nativeOnTouchEvent");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_base_EventForwarder_nativeScroll(JNIEnv* arg0, jobject arg1, jlong arg2, jlong arg3, jfloat arg4, jfloat arg5){
	Origin_Java_org_chromium_ui_base_EventForwarder_nativeScroll* TargetFunc = 
		(Origin_Java_org_chromium_ui_base_EventForwarder_nativeScroll*)dlsym(Sohandle, "Java_org_chromium_ui_base_EventForwarder_nativeScroll");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_base_EventForwarder_nativeStartFling(JNIEnv* arg0, jobject arg1, jlong arg2, jlong arg3, jfloat arg4, jfloat arg5, jboolean arg6){
	Origin_Java_org_chromium_ui_base_EventForwarder_nativeStartFling* TargetFunc = 
		(Origin_Java_org_chromium_ui_base_EventForwarder_nativeStartFling*)dlsym(Sohandle, "Java_org_chromium_ui_base_EventForwarder_nativeStartFling");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
}
JNIEXPORT jint JNICALL Java_org_chromium_ui_base_LocalizationUtils_nativeGetFirstStrongCharacterDirection(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_chromium_ui_base_LocalizationUtils_nativeGetFirstStrongCharacterDirection* TargetFunc = 
		(Origin_Java_org_chromium_ui_base_LocalizationUtils_nativeGetFirstStrongCharacterDirection*)dlsym(Sohandle, "Java_org_chromium_ui_base_LocalizationUtils_nativeGetFirstStrongCharacterDirection");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_base_SelectFileDialog_nativeOnFileNotSelected(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_ui_base_SelectFileDialog_nativeOnFileNotSelected* TargetFunc = 
		(Origin_Java_org_chromium_ui_base_SelectFileDialog_nativeOnFileNotSelected*)dlsym(Sohandle, "Java_org_chromium_ui_base_SelectFileDialog_nativeOnFileNotSelected");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_base_SelectFileDialog_nativeOnFileSelected(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jstring arg4){
	Origin_Java_org_chromium_ui_base_SelectFileDialog_nativeOnFileSelected* TargetFunc = 
		(Origin_Java_org_chromium_ui_base_SelectFileDialog_nativeOnFileSelected*)dlsym(Sohandle, "Java_org_chromium_ui_base_SelectFileDialog_nativeOnFileSelected");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_base_SelectFileDialog_nativeOnMultipleFilesSelected(JNIEnv* arg0, jobject arg1, jlong arg2, jobjectArray arg3, jobjectArray arg4){
	Origin_Java_org_chromium_ui_base_SelectFileDialog_nativeOnMultipleFilesSelected* TargetFunc = 
		(Origin_Java_org_chromium_ui_base_SelectFileDialog_nativeOnMultipleFilesSelected*)dlsym(Sohandle, "Java_org_chromium_ui_base_SelectFileDialog_nativeOnMultipleFilesSelected");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_base_WindowAndroid_nativeDestroy(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_ui_base_WindowAndroid_nativeDestroy* TargetFunc = 
		(Origin_Java_org_chromium_ui_base_WindowAndroid_nativeDestroy*)dlsym(Sohandle, "Java_org_chromium_ui_base_WindowAndroid_nativeDestroy");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jlong JNICALL Java_org_chromium_ui_base_WindowAndroid_nativeInit(JNIEnv* arg0, jobject arg1, jint arg2, jfloat arg3){
	Origin_Java_org_chromium_ui_base_WindowAndroid_nativeInit* TargetFunc = 
		(Origin_Java_org_chromium_ui_base_WindowAndroid_nativeInit*)dlsym(Sohandle, "Java_org_chromium_ui_base_WindowAndroid_nativeInit");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_base_WindowAndroid_nativeOnActivityStarted(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_ui_base_WindowAndroid_nativeOnActivityStarted* TargetFunc = 
		(Origin_Java_org_chromium_ui_base_WindowAndroid_nativeOnActivityStarted*)dlsym(Sohandle, "Java_org_chromium_ui_base_WindowAndroid_nativeOnActivityStarted");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_base_WindowAndroid_nativeOnActivityStopped(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_ui_base_WindowAndroid_nativeOnActivityStopped* TargetFunc = 
		(Origin_Java_org_chromium_ui_base_WindowAndroid_nativeOnActivityStopped*)dlsym(Sohandle, "Java_org_chromium_ui_base_WindowAndroid_nativeOnActivityStopped");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_base_WindowAndroid_nativeOnVisibilityChanged(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_chromium_ui_base_WindowAndroid_nativeOnVisibilityChanged* TargetFunc = 
		(Origin_Java_org_chromium_ui_base_WindowAndroid_nativeOnVisibilityChanged*)dlsym(Sohandle, "Java_org_chromium_ui_base_WindowAndroid_nativeOnVisibilityChanged");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_base_WindowAndroid_nativeOnVSync(JNIEnv* arg0, jobject arg1, jlong arg2, jlong arg3, jlong arg4){
	Origin_Java_org_chromium_ui_base_WindowAndroid_nativeOnVSync* TargetFunc = 
		(Origin_Java_org_chromium_ui_base_WindowAndroid_nativeOnVSync*)dlsym(Sohandle, "Java_org_chromium_ui_base_WindowAndroid_nativeOnVSync");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_base_WindowAndroid_nativeSetVSyncPaused(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_chromium_ui_base_WindowAndroid_nativeSetVSyncPaused* TargetFunc = 
		(Origin_Java_org_chromium_ui_base_WindowAndroid_nativeSetVSyncPaused*)dlsym(Sohandle, "Java_org_chromium_ui_base_WindowAndroid_nativeSetVSyncPaused");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_display_DisplayAndroidManager_nativeRemoveDisplay(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_ui_display_DisplayAndroidManager_nativeRemoveDisplay* TargetFunc = 
		(Origin_Java_org_chromium_ui_display_DisplayAndroidManager_nativeRemoveDisplay*)dlsym(Sohandle, "Java_org_chromium_ui_display_DisplayAndroidManager_nativeRemoveDisplay");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_display_DisplayAndroidManager_nativeSetPrimaryDisplayId(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_chromium_ui_display_DisplayAndroidManager_nativeSetPrimaryDisplayId* TargetFunc = 
		(Origin_Java_org_chromium_ui_display_DisplayAndroidManager_nativeSetPrimaryDisplayId*)dlsym(Sohandle, "Java_org_chromium_ui_display_DisplayAndroidManager_nativeSetPrimaryDisplayId");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_display_DisplayAndroidManager_nativeUpdateDisplay(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4, jint arg5, jfloat arg6, jint arg7, jint arg8, jint arg9, jboolean arg10){
	Origin_Java_org_chromium_ui_display_DisplayAndroidManager_nativeUpdateDisplay* TargetFunc = 
		(Origin_Java_org_chromium_ui_display_DisplayAndroidManager_nativeUpdateDisplay*)dlsym(Sohandle, "Java_org_chromium_ui_display_DisplayAndroidManager_nativeUpdateDisplay");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_events_devices_InputDeviceObserver_nativeInputConfigurationChanged(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_ui_events_devices_InputDeviceObserver_nativeInputConfigurationChanged* TargetFunc = 
		(Origin_Java_org_chromium_ui_events_devices_InputDeviceObserver_nativeInputConfigurationChanged*)dlsym(Sohandle, "Java_org_chromium_ui_events_devices_InputDeviceObserver_nativeInputConfigurationChanged");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_gfx_ViewConfigurationHelper_nativeUpdateSharedViewConfiguration(JNIEnv* arg0, jobject arg1, jfloat arg2, jfloat arg3, jfloat arg4, jfloat arg5, jfloat arg6){
	Origin_Java_org_chromium_ui_gfx_ViewConfigurationHelper_nativeUpdateSharedViewConfiguration* TargetFunc = 
		(Origin_Java_org_chromium_ui_gfx_ViewConfigurationHelper_nativeUpdateSharedViewConfiguration*)dlsym(Sohandle, "Java_org_chromium_ui_gfx_ViewConfigurationHelper_nativeUpdateSharedViewConfiguration");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_gl_SurfaceTextureListener_nativeDestroy(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_ui_gl_SurfaceTextureListener_nativeDestroy* TargetFunc = 
		(Origin_Java_org_chromium_ui_gl_SurfaceTextureListener_nativeDestroy*)dlsym(Sohandle, "Java_org_chromium_ui_gl_SurfaceTextureListener_nativeDestroy");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_gl_SurfaceTextureListener_nativeFrameAvailable(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_ui_gl_SurfaceTextureListener_nativeFrameAvailable* TargetFunc = 
		(Origin_Java_org_chromium_ui_gl_SurfaceTextureListener_nativeFrameAvailable*)dlsym(Sohandle, "Java_org_chromium_ui_gl_SurfaceTextureListener_nativeFrameAvailable");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jlong JNICALL Java_org_chromium_ui_resources_ResourceFactory_nativeCreateBitmapResource(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_chromium_ui_resources_ResourceFactory_nativeCreateBitmapResource* TargetFunc = 
		(Origin_Java_org_chromium_ui_resources_ResourceFactory_nativeCreateBitmapResource*)dlsym(Sohandle, "Java_org_chromium_ui_resources_ResourceFactory_nativeCreateBitmapResource");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT jlong JNICALL Java_org_chromium_ui_resources_ResourceFactory_nativeCreateNinePatchBitmapResource(JNIEnv* arg0, jobject arg1, jint arg2, jint arg3, jint arg4, jint arg5, jint arg6, jint arg7, jint arg8, jint arg9){
	Origin_Java_org_chromium_ui_resources_ResourceFactory_nativeCreateNinePatchBitmapResource* TargetFunc = 
		(Origin_Java_org_chromium_ui_resources_ResourceFactory_nativeCreateNinePatchBitmapResource*)dlsym(Sohandle, "Java_org_chromium_ui_resources_ResourceFactory_nativeCreateNinePatchBitmapResource");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_resources_ResourceManager_nativeClearTintedResourceCache(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_chromium_ui_resources_ResourceManager_nativeClearTintedResourceCache* TargetFunc = 
		(Origin_Java_org_chromium_ui_resources_ResourceManager_nativeClearTintedResourceCache*)dlsym(Sohandle, "Java_org_chromium_ui_resources_ResourceManager_nativeClearTintedResourceCache");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_resources_ResourceManager_nativeOnResourceReady(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4, jobject arg5, jlong arg6){
	Origin_Java_org_chromium_ui_resources_ResourceManager_nativeOnResourceReady* TargetFunc = 
		(Origin_Java_org_chromium_ui_resources_ResourceManager_nativeOnResourceReady*)dlsym(Sohandle, "Java_org_chromium_ui_resources_ResourceManager_nativeOnResourceReady");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
}
JNIEXPORT void JNICALL Java_org_chromium_ui_resources_ResourceManager_nativeRemoveResource(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4){
	Origin_Java_org_chromium_ui_resources_ResourceManager_nativeRemoveResource* TargetFunc = 
		(Origin_Java_org_chromium_ui_resources_ResourceManager_nativeRemoveResource*)dlsym(Sohandle, "Java_org_chromium_ui_resources_ResourceManager_nativeRemoveResource");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT jstring JNICALL Java_org_xwalk_core_internal_AndroidProtocolHandler_nativeGetAndroidAssetPath(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_xwalk_core_internal_AndroidProtocolHandler_nativeGetAndroidAssetPath* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_AndroidProtocolHandler_nativeGetAndroidAssetPath*)dlsym(Sohandle, "Java_org_xwalk_core_internal_AndroidProtocolHandler_nativeGetAndroidAssetPath");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT jstring JNICALL Java_org_xwalk_core_internal_AndroidProtocolHandler_nativeGetAndroidResourcePath(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_xwalk_core_internal_AndroidProtocolHandler_nativeGetAndroidResourcePath* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_AndroidProtocolHandler_nativeGetAndroidResourcePath*)dlsym(Sohandle, "Java_org_xwalk_core_internal_AndroidProtocolHandler_nativeGetAndroidResourcePath");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_extensions_XWalkExtensionAndroid_nativeBroadcastMessage(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3){
	Origin_Java_org_xwalk_core_internal_extensions_XWalkExtensionAndroid_nativeBroadcastMessage* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_extensions_XWalkExtensionAndroid_nativeBroadcastMessage*)dlsym(Sohandle, "Java_org_xwalk_core_internal_extensions_XWalkExtensionAndroid_nativeBroadcastMessage");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_extensions_XWalkExtensionAndroid_nativeDestroyExtension(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_extensions_XWalkExtensionAndroid_nativeDestroyExtension* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_extensions_XWalkExtensionAndroid_nativeDestroyExtension*)dlsym(Sohandle, "Java_org_xwalk_core_internal_extensions_XWalkExtensionAndroid_nativeDestroyExtension");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jlong JNICALL Java_org_xwalk_core_internal_extensions_XWalkExtensionAndroid_nativeGetOrCreateExtension(JNIEnv* arg0, jobject arg1, jstring arg2, jstring arg3, jobjectArray arg4){
	Origin_Java_org_xwalk_core_internal_extensions_XWalkExtensionAndroid_nativeGetOrCreateExtension* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_extensions_XWalkExtensionAndroid_nativeGetOrCreateExtension*)dlsym(Sohandle, "Java_org_xwalk_core_internal_extensions_XWalkExtensionAndroid_nativeGetOrCreateExtension");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_extensions_XWalkExtensionAndroid_nativePostBinaryMessage(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jbyteArray arg4){
	Origin_Java_org_xwalk_core_internal_extensions_XWalkExtensionAndroid_nativePostBinaryMessage* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_extensions_XWalkExtensionAndroid_nativePostBinaryMessage*)dlsym(Sohandle, "Java_org_xwalk_core_internal_extensions_XWalkExtensionAndroid_nativePostBinaryMessage");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_extensions_XWalkExtensionAndroid_nativePostMessage(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jstring arg4){
	Origin_Java_org_xwalk_core_internal_extensions_XWalkExtensionAndroid_nativePostMessage* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_extensions_XWalkExtensionAndroid_nativePostMessage*)dlsym(Sohandle, "Java_org_xwalk_core_internal_extensions_XWalkExtensionAndroid_nativePostMessage");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_extensions_XWalkNativeExtensionLoaderAndroid_nativeRegisterExtensionInPath(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_xwalk_core_internal_extensions_XWalkNativeExtensionLoaderAndroid_nativeRegisterExtensionInPath* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_extensions_XWalkNativeExtensionLoaderAndroid_nativeRegisterExtensionInPath*)dlsym(Sohandle, "Java_org_xwalk_core_internal_extensions_XWalkNativeExtensionLoaderAndroid_nativeRegisterExtensionInPath");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkAutofillClientAndroid_nativeSuggestionSelected(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_xwalk_core_internal_XWalkAutofillClientAndroid_nativeSuggestionSelected* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkAutofillClientAndroid_nativeSuggestionSelected*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkAutofillClientAndroid_nativeSuggestionSelected");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeClearCache(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeClearCache* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeClearCache*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeClearCache");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeClearCacheForSingleFile(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeClearCacheForSingleFile* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeClearCacheForSingleFile*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeClearCacheForSingleFile");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeClearMatches(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeClearMatches* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeClearMatches*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeClearMatches");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeDestroy(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeDestroy* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeDestroy*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeDestroy");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jstring JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeDevToolsAgentId(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeDevToolsAgentId* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeDevToolsAgentId*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeDevToolsAgentId");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeFindAllAsync(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeFindAllAsync* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeFindAllAsync*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeFindAllAsync");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeFindNext(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeFindNext* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeFindNext*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeFindNext");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jbyteArray JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeGetCertificate(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeGetCertificate* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeGetCertificate*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeGetCertificate");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jint JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeGetRoutingID(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeGetRoutingID* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeGetRoutingID*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeGetRoutingID");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jbyteArray JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeGetState(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeGetState* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeGetState*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeGetState");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jstring JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeGetVersion(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeGetVersion* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeGetVersion*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeGetVersion");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jobject JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeGetWebContents(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeGetWebContents* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeGetWebContents*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeGetWebContents");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jlong JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeInit(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeInit* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeInit*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeInit");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeInsertVisualStateCallback(JNIEnv* arg0, jobject arg1, jlong arg2, jlong arg3, jobject arg4){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeInsertVisualStateCallback* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeInsertVisualStateCallback*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeInsertVisualStateCallback");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeInvokeGeolocationCallback(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3, jstring arg4){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeInvokeGeolocationCallback* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeInvokeGeolocationCallback*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeInvokeGeolocationCallback");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT jlong JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeReleasePopupXWalkContent(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeReleasePopupXWalkContent* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeReleasePopupXWalkContent*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeReleasePopupXWalkContent");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeRequestNewHitTestDataAt(JNIEnv* arg0, jobject arg1, jlong arg2, jfloat arg3, jfloat arg4, jfloat arg5){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeRequestNewHitTestDataAt* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeRequestNewHitTestDataAt*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeRequestNewHitTestDataAt");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeSetBackgroundColor(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeSetBackgroundColor* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeSetBackgroundColor*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeSetBackgroundColor");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeSetJavaPeers(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3, jobject arg4, jobject arg5, jobject arg6, jobject arg7){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeSetJavaPeers* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeSetJavaPeers*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeSetJavaPeers");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeSetJsOnlineProperty(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeSetJsOnlineProperty* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeSetJsOnlineProperty*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeSetJsOnlineProperty");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT jboolean JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeSetManifest(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jstring arg4){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeSetManifest* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeSetManifest*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeSetManifest");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeSetOriginAccessWhitelist(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jstring arg4){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeSetOriginAccessWhitelist* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeSetOriginAccessWhitelist*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeSetOriginAccessWhitelist");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT jboolean JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeSetState(JNIEnv* arg0, jobject arg1, jlong arg2, jbyteArray arg3){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeSetState* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeSetState*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeSetState");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeSmoothScroll(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4, jlong arg5){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeSmoothScroll* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeSmoothScroll*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeSmoothScroll");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeUpdateDefaultLocale(JNIEnv* arg0, jobject arg1, jstring arg2, jstring arg3){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeUpdateDefaultLocale* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeUpdateDefaultLocale*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeUpdateDefaultLocale");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContent_nativeUpdateLastHitTestData(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkContent_nativeUpdateLastHitTestData* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContent_nativeUpdateLastHitTestData*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContent_nativeUpdateLastHitTestData");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeCancelJsResult(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeCancelJsResult* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeCancelJsResult*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeCancelJsResult");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeClearClientCertPreferences(JNIEnv* arg0, jobject arg1, jlong arg2, jobject arg3){
	Origin_Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeClearClientCertPreferences* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeClearClientCertPreferences*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeClearClientCertPreferences");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeConfirmJsResult(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jstring arg4){
	Origin_Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeConfirmJsResult* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeConfirmJsResult*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeConfirmJsResult");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeDownloadIcon(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3){
	Origin_Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeDownloadIcon* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeDownloadIcon*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeDownloadIcon");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeNotificationClicked(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeNotificationClicked* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeNotificationClicked*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeNotificationClicked");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeNotificationClosed(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jboolean arg4){
	Origin_Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeNotificationClosed* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeNotificationClosed*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeNotificationClosed");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeNotificationDisplayed(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeNotificationDisplayed* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeNotificationDisplayed*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeNotificationDisplayed");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeOnFilesNotSelected(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4, jint arg5){
	Origin_Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeOnFilesNotSelected* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeOnFilesNotSelected*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeOnFilesNotSelected");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeOnFilesSelected(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4, jint arg5, jstring arg6, jstring arg7){
	Origin_Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeOnFilesSelected* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeOnFilesSelected*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeOnFilesSelected");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeProceedSslError(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3, jint arg4){
	Origin_Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeProceedSslError* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeProceedSslError*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeProceedSslError");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeProvideClientCertificateResponse(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jobjectArray arg4, jobject arg5){
	Origin_Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeProvideClientCertificateResponse* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeProvideClientCertificateResponse*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkContentsClientBridge_nativeProvideClientCertificateResponse");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT jboolean JNICALL Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeAcceptCookie(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeAcceptCookie* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeAcceptCookie*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeAcceptCookie");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT jboolean JNICALL Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeAllowFileSchemeCookies(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeAllowFileSchemeCookies* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeAllowFileSchemeCookies*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeAllowFileSchemeCookies");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeFlushCookieStore(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeFlushCookieStore* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeFlushCookieStore*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeFlushCookieStore");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT jstring JNICALL Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeGetCookie(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeGetCookie* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeGetCookie*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeGetCookie");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeHasCookies(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeHasCookies* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeHasCookies*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeHasCookies");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeRemoveAllCookie(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeRemoveAllCookie* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeRemoveAllCookie*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeRemoveAllCookie");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeRemoveExpiredCookie(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeRemoveExpiredCookie* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeRemoveExpiredCookie*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeRemoveExpiredCookie");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeRemoveSessionCookie(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeRemoveSessionCookie* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeRemoveSessionCookie*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeRemoveSessionCookie");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeSetAcceptCookie(JNIEnv* arg0, jobject arg1, jboolean arg2){
	Origin_Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeSetAcceptCookie* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeSetAcceptCookie*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeSetAcceptCookie");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeSetAcceptFileSchemeCookies(JNIEnv* arg0, jobject arg1, jboolean arg2){
	Origin_Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeSetAcceptFileSchemeCookies* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeSetAcceptFileSchemeCookies*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeSetAcceptFileSchemeCookies");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeSetCookie(JNIEnv* arg0, jobject arg1, jstring arg2, jstring arg3){
	Origin_Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeSetCookie* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeSetCookie*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkCookieManagerInternal_nativeSetCookie");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkDevToolsServer_nativeDestroyRemoteDebugging(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkDevToolsServer_nativeDestroyRemoteDebugging* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkDevToolsServer_nativeDestroyRemoteDebugging*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkDevToolsServer_nativeDestroyRemoteDebugging");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jlong JNICALL Java_org_xwalk_core_internal_XWalkDevToolsServer_nativeInitRemoteDebugging(JNIEnv* arg0, jobject arg1, jstring arg2){
	Origin_Java_org_xwalk_core_internal_XWalkDevToolsServer_nativeInitRemoteDebugging* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkDevToolsServer_nativeInitRemoteDebugging*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkDevToolsServer_nativeInitRemoteDebugging");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_xwalk_core_internal_XWalkDevToolsServer_nativeIsRemoteDebuggingEnabled(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkDevToolsServer_nativeIsRemoteDebuggingEnabled* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkDevToolsServer_nativeIsRemoteDebuggingEnabled*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkDevToolsServer_nativeIsRemoteDebuggingEnabled");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkDevToolsServer_nativeSetRemoteDebuggingEnabled(JNIEnv* arg0, jobject arg1, jlong arg2, jboolean arg3, jboolean arg4, jboolean arg5){
	Origin_Java_org_xwalk_core_internal_XWalkDevToolsServer_nativeSetRemoteDebuggingEnabled* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkDevToolsServer_nativeSetRemoteDebuggingEnabled*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkDevToolsServer_nativeSetRemoteDebuggingEnabled");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4, arg5);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkFormDatabase_nativeClearFormData(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_xwalk_core_internal_XWalkFormDatabase_nativeClearFormData* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkFormDatabase_nativeClearFormData*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkFormDatabase_nativeClearFormData");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT jboolean JNICALL Java_org_xwalk_core_internal_XWalkFormDatabase_nativeHasFormData(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_xwalk_core_internal_XWalkFormDatabase_nativeHasFormData* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkFormDatabase_nativeHasFormData*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkFormDatabase_nativeHasFormData");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkHttpAuthHandlerInternal_nativeCancel(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkHttpAuthHandlerInternal_nativeCancel* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkHttpAuthHandlerInternal_nativeCancel*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkHttpAuthHandlerInternal_nativeCancel");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkHttpAuthHandlerInternal_nativeProceed(JNIEnv* arg0, jobject arg1, jlong arg2, jstring arg3, jstring arg4){
	Origin_Java_org_xwalk_core_internal_XWalkHttpAuthHandlerInternal_nativeProceed* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkHttpAuthHandlerInternal_nativeProceed*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkHttpAuthHandlerInternal_nativeProceed");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkPathHelper_nativeSetDirectory(JNIEnv* arg0, jobject arg1, jstring arg2, jstring arg3){
	Origin_Java_org_xwalk_core_internal_XWalkPathHelper_nativeSetDirectory* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkPathHelper_nativeSetDirectory*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkPathHelper_nativeSetDirectory");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkPresentationHost_nativeDestroy(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkPresentationHost_nativeDestroy* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkPresentationHost_nativeDestroy*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkPresentationHost_nativeDestroy");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jlong JNICALL Java_org_xwalk_core_internal_XWalkPresentationHost_nativeInit(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_xwalk_core_internal_XWalkPresentationHost_nativeInit* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkPresentationHost_nativeInit*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkPresentationHost_nativeInit");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkPresentationHost_nativeOnDisplayAdded(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_xwalk_core_internal_XWalkPresentationHost_nativeOnDisplayAdded* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkPresentationHost_nativeOnDisplayAdded*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkPresentationHost_nativeOnDisplayAdded");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkPresentationHost_nativeOnDisplayChanged(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_xwalk_core_internal_XWalkPresentationHost_nativeOnDisplayChanged* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkPresentationHost_nativeOnDisplayChanged*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkPresentationHost_nativeOnDisplayChanged");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkPresentationHost_nativeOnDisplayRemoved(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3){
	Origin_Java_org_xwalk_core_internal_XWalkPresentationHost_nativeOnDisplayRemoved* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkPresentationHost_nativeOnDisplayRemoved*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkPresentationHost_nativeOnDisplayRemoved");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkPresentationHost_nativeOnPresentationClosed(JNIEnv* arg0, jobject arg1, jlong arg2, jint arg3, jint arg4){
	Origin_Java_org_xwalk_core_internal_XWalkPresentationHost_nativeOnPresentationClosed* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkPresentationHost_nativeOnPresentationClosed*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkPresentationHost_nativeOnPresentationClosed");
	return TargetFunc(arg0, arg1, arg2, arg3, arg4);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkPresentationHost_nativeSetupJavaPeer(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkPresentationHost_nativeSetupJavaPeer* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkPresentationHost_nativeSetupJavaPeer*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkPresentationHost_nativeSetupJavaPeer");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeDestroy(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeDestroy* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeDestroy*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeDestroy");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jstring JNICALL Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeGetDefaultUserAgent(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeGetDefaultUserAgent* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeGetDefaultUserAgent*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeGetDefaultUserAgent");
	return TargetFunc(arg0, arg1);
}
JNIEXPORT jlong JNICALL Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeInit(JNIEnv* arg0, jobject arg1, jobject arg2){
	Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeInit* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeInit*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeInit");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeInvokeChannel(JNIEnv* arg0, jobject arg1, jint arg2, jobjectArray arg3){
	Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeInvokeChannel* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeInvokeChannel*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeInvokeChannel");
	return TargetFunc(arg0, arg1, arg2, arg3);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeResetScrollAndScaleState(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeResetScrollAndScaleState* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeResetScrollAndScaleState*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeResetScrollAndScaleState");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeSetJSExceptionCaptureEnable(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeSetJSExceptionCaptureEnable* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeSetJSExceptionCaptureEnable*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeSetJSExceptionCaptureEnable");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeSetLogEnable(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeSetLogEnable* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeSetLogEnable*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeSetLogEnable");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeSetWindowPerformanceReporterEnable(JNIEnv* arg0, jobject arg1, jboolean arg2){
	Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeSetWindowPerformanceReporterEnable* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeSetWindowPerformanceReporterEnable*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeSetWindowPerformanceReporterEnable");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeUpdateAcceptLanguages(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeUpdateAcceptLanguages* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeUpdateAcceptLanguages*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeUpdateAcceptLanguages");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeUpdateEverythingLocked(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeUpdateEverythingLocked* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeUpdateEverythingLocked*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeUpdateEverythingLocked");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeUpdateFormDataPreferences(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeUpdateFormDataPreferences* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeUpdateFormDataPreferences*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeUpdateFormDataPreferences");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeUpdateInitialPageScale(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeUpdateInitialPageScale* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeUpdateInitialPageScale*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeUpdateInitialPageScale");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeUpdateUserAgent(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeUpdateUserAgent* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeUpdateUserAgent*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeUpdateUserAgent");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT void JNICALL Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeUpdateWebkitPreferences(JNIEnv* arg0, jobject arg1, jlong arg2){
	Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeUpdateWebkitPreferences* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeUpdateWebkitPreferences*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkSettingsInternal_nativeUpdateWebkitPreferences");
	return TargetFunc(arg0, arg1, arg2);
}
JNIEXPORT jboolean JNICALL Java_org_xwalk_core_internal_XWalkViewDelegate_nativeIsLibraryBuiltForIA(JNIEnv* arg0, jobject arg1){
	Origin_Java_org_xwalk_core_internal_XWalkViewDelegate_nativeIsLibraryBuiltForIA* TargetFunc = 
		(Origin_Java_org_xwalk_core_internal_XWalkViewDelegate_nativeIsLibraryBuiltForIA*)dlsym(Sohandle, "Java_org_xwalk_core_internal_XWalkViewDelegate_nativeIsLibraryBuiltForIA");
	return TargetFunc(arg0, arg1);
}
